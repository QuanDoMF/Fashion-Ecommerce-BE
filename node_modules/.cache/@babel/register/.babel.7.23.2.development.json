{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"filename\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:development":{"value":{"code":"const port = 4000;\nconst express = require('express');\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst jwt = require(\"jsonwebtoken\");\nconst multer = require(\"multer\");\nconst path = require(\"path\");\nconst cors = require('cors');\nconst {\n  v4: uuid\n} = require('uuid');\napp.use(express.json());\napp.use(cors());\n\n// Database connection with MongoDB\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\");\n\n// API creation\napp.get(\"/\", (req, res) => {\n  res.send(\"Express App is Running\");\n});\nconst storage = multer.diskStorage({\n  destination: './upload/images',\n  filename: (req, file, cb) => {\n    return cb(null, `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`);\n  }\n});\nconst upload = multer({\n  storage: storage\n});\n\n//creating upload endpoint for images\n\napp.use('/images', express.static('upload/images'));\napp.post('/upload', upload.single('product'), (req, res) => {\n  console.log('req', req);\n  res.json({\n    success: 1,\n    image_url: `https://fashion-ecommerce-be.onrender.com/images/${req.file.filename}`\n  });\n});\n\n// schema for creating product\nconst Product = mongoose.model(\"Product\", {\n  id: {\n    type: Number,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  image: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true\n  },\n  new_price: {\n    type: Number,\n    required: true\n  },\n  old_price: {\n    type: Number,\n    required: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  },\n  avilabel: {\n    type: Boolean,\n    default: true\n  }\n});\napp.post('/addproduct', async (req, res) => {\n  let products = await Product.find({});\n  let id;\n  if (products.length > 0) {\n    let last_product_array = products.slice(-1);\n    last_product = last_product_array[0];\n    id = last_product.id + 1;\n  } else {\n    id = 1;\n  }\n  const product = new Product({\n    id: id,\n    // luôn bằng thằng cuối tăng lên 1\n    name: req.body.name,\n    image: req.body.image,\n    category: req.body.category,\n    new_price: req.body.new_price,\n    old_price: req.body.old_price\n  });\n  await product.save();\n  console.log(\"Saved\");\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n\n// Creating API for deleting product\n\napp.post('/removeproduct', async (req, res) => {\n  await Product.findOneAndDelete({\n    id: req.body.id\n  });\n  console.log(\"Removed\");\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n\n// creating API for getting all products\napp.get('/allproduct', async (req, res) => {\n  try {\n    let start = parseInt(req.query.start) || 0;\n    let limit = parseInt(req.query.limit) || 12;\n    let category = req.query.category;\n    let query = {};\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\n    if (category) {\n      query.category = category;\n    }\n    let products;\n\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\n    if (!isNaN(start) && !isNaN(limit) && category) {\n      products = await Product.find(query).skip(start).limit(limit);\n    } else {\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\n      products = await Product.find({});\n    }\n    res.json({\n      success: true,\n      data: products\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Internal server error\"\n    });\n  }\n});\nconst Users = mongoose.model('Users', {\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  orderList: {\n    type: Array\n  },\n  cartDetails: {\n    type: Array,\n    default: []\n  },\n  data: {\n    type: Date,\n    default: Date.now\n  }\n});\napp.post('/signup', async (req, res) => {\n  let check = await Users.findOne({\n    email: req.body.email\n  });\n  if (check) {\n    return res.status(400).json({\n      success: false,\n      errors: 'existing user found with same email'\n    });\n  }\n  let cart = {};\n  for (let i = 0; i < 300; i++) {\n    cart[i] = 0;\n  }\n  const user = new Users({\n    name: req.body.username,\n    email: req.body.email,\n    password: req.body.password,\n    orderList: [],\n    cartData: cart\n  });\n  await user.save();\n  const data = {\n    user: {\n      id: user.id,\n      username: user.name,\n      email: user.email\n    }\n  };\n  const token = jwt.sign(data, 'secret_ecom');\n  res.json({\n    success: true,\n    token,\n    username: user.name,\n    email: user.email\n  }); // Sửa ở đây\n});\n\n//creating endpoint for user login \napp.post('/login', async (req, res) => {\n  let user = await Users.findOne({\n    email: req.body.email\n  });\n  if (user) {\n    const passCompare = req.body.password === user.password;\n    if (passCompare) {\n      const data = {\n        user: {\n          id: user.id,\n          username: user.name,\n          email: user.email\n        }\n      };\n      const token = jwt.sign(data, 'secret_ecom');\n      res.json({\n        success: true,\n        token,\n        username: user.name,\n        email: user.email\n      }); // Sửa ở đây\n    } else {\n      res.json({\n        success: false,\n        errors: 'Wrong Password'\n      });\n    }\n  } else {\n    res.json({\n      success: false,\n      errors: 'Wrong Email Id'\n    });\n  }\n});\n\n// creating endpoint for newcollection data\napp.get('/newcollection', async (req, res) => {\n  let products = await Product.find({});\n  let newcollection = products.slices;\n});\n\n// creating middleware to fetch user\n\nconst fetchUser = async (req, res, next) => {\n  const token = req.header('auth-token');\n  // console.log(token)\n  if (!token) {\n    res.status(401).send({\n      errors: 'Please authenticate using valid token'\n    });\n  } else {\n    try {\n      const data = jwt.verify(token, 'secret_ecom');\n      req.user = data.user;\n      next();\n    } catch (error) {\n      res.status(401).send({\n        errors: \"Please authenticate using valid token\"\n      });\n      console.log(error);\n    }\n  }\n};\n\n// creating endpoint for adding product in cartData\n// app.post('/addtocart', fetchUser , async (req, res) => {\n//   // console.log('Added', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData && userData.cartData){\n//     userData.cartData[req.body.itemId] += 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Added\")\n//   }else{\n//     console.log('chưa có userData')\n//   }\n// })\napp.post('/addtocart', fetchUser, async (req, res) => {\n  // console.log(req.body.cartItem)\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\n    if (!userData.cartDetails) {\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\n    }\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (existingItemIndex !== -1) {\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\n      userData.cartDetails[existingItemIndex].quantity += 1;\n    } else {\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\n      userData.cartDetails.push({\n        ...req.body.cartItem,\n        quantity: 1\n      });\n    }\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n    await userData.save();\n    res.status(200).send(\"Item added to cart successfully\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\n//   console.log('Removed', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData.cartData[req.body.itemId] > 0) {\n//     userData.cartData[req.body.itemId] -= 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Removed\")\n//   }\n// })\n\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    if (!userData) {\n      return res.status(404).send(\"User not found\");\n    }\n\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\n\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\n      userData.cartDetails[itemIndex].quantity -= 1;\n\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n      await userData.save();\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\n      console.log('userData', userData);\n      return res.status(200).send(\"Item quantity decremented successfully\");\n    } else {\n      return res.status(400).send(\"No items to decrement\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\napp.post('/incrementformcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    const userData = await Users.findOneAndUpdate({\n      _id: userId,\n      \"cartDetails.id\": itemId\n    },\n    // Tìm người dùng với ID và itemId phù hợp\n    {\n      $inc: {\n        \"cartDetails.$.quantity\": 1\n      }\n    },\n    // Tăng quantity của mục có itemId tương ứng\n    {\n      new: true\n    } // Trả về tài liệu đã cập nhật\n    );\n\n    if (userData) {\n      return res.status(200).send(\"Item quantity incremented successfully\");\n    } else {\n      return res.status(400).send(\"Item not found in cart\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\napp.post('/removefromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\n    if (userData && userData.cartDetails) {\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n      if (existingItemIndex !== -1) {\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\n        await userData.save();\n        return res.status(200).send(\"Item removed from cart successfully\");\n      }\n    }\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\n    res.status(400).send(\"Item not found in cart\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/removefromcart', fetchUser , async (req, res) => {\n//   try {\n//     const userId = req.user.id;\n//     const itemId = req.body.itemId;\n\n//     let userData = await Users.findOne({_id: userId});\n\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\n//       userData.cartData[itemId] = 0;\n\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\n//       res.status(200).send(\"All items removed\");\n//     } else {\n//       res.status(400).send(\"No items to remove\");\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     res.status(500).send(\"Internal server error\");\n//   }\n// });\n\n// creating endpoint to get cartdata\n// creating endpoint to get cartdata\n\n// app.post('/getcart', fetchUser, async (req, res) => {\n//   try {\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\n//       const userId = req.user.id;\n//       // Tìm người dùng trong cơ sở dữ liệu\n//       const userData = await Users.findOne({ _id: userId });\n\n//       console.log('userData', userData)\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\n//       if (userData && userData.cartData) {\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\n//           res.json(userData.cartData);\n//       } else {\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\n//       }\n//   } catch (error) {\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\n//       console.error(error);\n//       res.status(500).json({ success: false, message: 'Internal server error' });\n//   }\n// });\n\n// creating endpoint for checkout cart\napp.post('/orderList', async (req, res) => {\n  try {\n    const order = req.body;\n    const user = await Users.findOne({\n      email: order.customerInfo.email\n    });\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    const newOrder = {\n      orderId: order.orderId,\n      orderInfo: {\n        ...order.orderInfo,\n        orderDate: order.orderInfo.orderDate\n      },\n      orderDetails: order.orderDetails,\n      customerInfo: order.customerInfo\n    };\n    user.orderList.push(newOrder);\n    await user.save();\n    res.status(200).json({\n      success: true,\n      message: 'Order successfully processed and saved'\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n// endpoint get all orderList\n\napp.get('/orderList', async (req, res) => {\n  try {\n    const users = await Users.find({}, 'orderList');\n    const allOrderList = users.map(user => user.orderList);\n    const orderList = allOrderList.flat();\n    res.status(200).json(orderList);\n  } catch (error) {\n    console.error('Error while fetching all cartDetails:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\napp.listen(port, error => {\n  if (!error) {\n    console.log(\"Server Running on port: \" + port);\n  } else {\n    console.log(\"Error:\" + error);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["port","express","require","app","mongoose","jwt","multer","path","cors","v4","uuid","use","json","connect","get","req","res","send","storage","diskStorage","destination","filename","file","cb","fieldname","Date","now","extname","originalname","upload","static","post","single","console","log","success","image_url","Product","model","id","type","Number","required","name","String","image","category","new_price","old_price","date","default","avilabel","Boolean","products","find","length","last_product_array","slice","last_product","product","body","save","findOneAndDelete","start","parseInt","query","limit","isNaN","skip","data","error","status","message","Users","email","password","orderList","Array","cartDetails","check","findOne","errors","cart","i","user","username","cartData","token","sign","passCompare","newcollection","slices","fetchUser","next","header","verify","userId","itemId","cartItem","userData","_id","existingItemIndex","findIndex","item","quantity","push","itemIndex","findOneAndUpdate","$inc","new","splice","order","customerInfo","newOrder","orderId","orderInfo","orderDate","orderDetails","users","allOrderList","map","flat","listen"],"sourceRoot":"C:\\Users\\quant\\Desktop\\ViteProject\\PROJECT\\backend\\","sources":["index.js"],"sourcesContent":["\r\nconst port = 4000;\r\nconst express = require('express')\r\nconst app = express()\r\nconst mongoose = require(\"mongoose\")\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\")\r\nconst path = require(\"path\")\r\nconst cors = require('cors');\r\nconst { v4: uuid } = require('uuid')\r\napp.use(express.json())\r\napp.use(cors())\r\n\r\n// Database connection with MongoDB\r\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\")\r\n\r\n// API creation\r\napp.get(\"/\", (req, res) => {\r\n    res.send(\"Express App is Running\")\r\n})\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: './upload/images',\r\n  filename: (req, file, cb) => {\r\n        return cb(null, `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`)\r\n  }\r\n})\r\nconst upload = multer({storage: storage})\r\n\r\n//creating upload endpoint for images\r\n\r\napp.use('/images',express.static('upload/images'))\r\napp.post('/upload',upload.single('product'),(req, res) => {\r\n  console.log('req', req)\r\n      res.json({\r\n          success: 1,\r\n          image_url: `https://fashion-ecommerce-be.onrender.com/images/${req.file.filename}`\r\n      })\r\n})  \r\n\r\n// schema for creating product\r\nconst Product = mongoose.model(\"Product\", {\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  image:{\r\n    type: String,\r\n    required: true,\r\n  },\r\n  category: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  new_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  old_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  date: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  avilabel: {\r\n    type: Boolean,\r\n    default: true,\r\n  }\r\n})\r\n\r\napp.post('/addproduct', async (req, res) => {\r\n    let products = await Product.find({})\r\n    let id\r\n    if(products.length > 0) {\r\n        let last_product_array = products.slice(-1)\r\n        last_product = last_product_array[0]\r\n        id = last_product.id + 1;\r\n    }else{\r\n      id = 1\r\n    }\r\n        const product = new Product ({\r\n          id: id, // luôn bằng thằng cuối tăng lên 1\r\n          name: req.body.name,\r\n          image: req.body.image,\r\n          category: req.body.category,\r\n          new_price: req.body.new_price,\r\n          old_price: req.body.old_price,\r\n        })\r\n        await product.save()\r\n        console.log(\"Saved\")\r\n        res.json({\r\n          success: true,\r\n          name: req.body.name\r\n        })\r\n})\r\n\r\n// Creating API for deleting product\r\n\r\napp.post('/removeproduct', async (req, res) => {\r\n  await Product.findOneAndDelete({\r\n    id: req.body.id\r\n  })\r\n  console.log(\"Removed\")\r\n  res.json({\r\n    success: true,\r\n    name: req.body.name\r\n  })\r\n})\r\n\r\n// creating API for getting all products\r\napp.get('/allproduct', async (req, res) => {\r\n  try {\r\n    let start = parseInt(req.query.start) || 0; \r\n    let limit = parseInt(req.query.limit) || 12; \r\n    let category = req.query.category; \r\n    let query = {};\r\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\r\n    if (category) {\r\n      query.category = category;\r\n    }\r\n\r\n    let products;\r\n\r\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\r\n    if (!isNaN(start) && !isNaN(limit) && category) {\r\n      products = await Product.find(query).skip(start).limit(limit);\r\n    } else {\r\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\r\n      products = await Product.find({});\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: products\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, message: \"Internal server error\" });\r\n  }\r\n});\r\n\r\nconst Users = mongoose.model('Users' , {\r\n  name: {\r\n      type: String,\r\n      required: true\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  orderList: {\r\n      type: Array,\r\n  },\r\n  cartDetails: {\r\n    type: Array,\r\n    default: [],\r\n  },\r\n  data: {\r\n    type: Date,\r\n    default: Date.now,\r\n  }\r\n});\r\napp.post('/signup', async (req, res) => {\r\n    let check =  await Users.findOne({email: req.body.email})\r\n    if(check) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        errors: 'existing user found with same email'\r\n      }) \r\n    }\r\n    let cart = {};\r\n    for( let i = 0; i < 300 ; i++){\r\n      cart[i] = 0;\r\n    }\r\n    const user = new Users({\r\n        name: req.body.username,\r\n        email: req.body.email,\r\n        password: req.body.password,\r\n        orderList: [],\r\n        cartData: cart,\r\n    })\r\n    await user.save()\r\n    const data = {\r\n      user: {\r\n        id: user.id,\r\n        username: user.name,\r\n        email: user.email\r\n      }\r\n    }\r\n    const token = jwt.sign(data, 'secret_ecom')\r\n    res.json({ success: true, \r\n      token, \r\n      username: user.name, \r\n      email: user.email\r\n     }); // Sửa ở đây\r\n  }\r\n)\r\n\r\n//creating endpoint for user login \r\napp.post('/login', async (req, res) => {\r\n  let user = await Users.findOne({\r\n    email: req.body.email\r\n  });\r\n  \r\n  if (user) {\r\n    const passCompare = req.body.password === user.password;\r\n    if (passCompare) {\r\n      const data = {\r\n        user: {\r\n          id: user.id,\r\n          username: user.name,\r\n          email: user.email\r\n        }\r\n      };\r\n      const token = jwt.sign(data, 'secret_ecom');\r\n      res.json({ success: true, \r\n                    token, \r\n                    username: user.name, \r\n                    email: user.email }); // Sửa ở đây\r\n    } else {\r\n      res.json({ success: false, errors: 'Wrong Password' });\r\n    }\r\n  } else {\r\n    res.json({ success: false, errors: 'Wrong Email Id' });\r\n  }\r\n});\r\n\r\n// creating endpoint for newcollection data\r\napp.get('/newcollection', async (req, res) => {\r\n  let products = await Product.find({})\r\n  let newcollection = products.slices\r\n})\r\n\r\n// creating middleware to fetch user\r\n\r\nconst fetchUser = async (req,res, next) => {\r\n    const token = req.header('auth-token')\r\n    // console.log(token)\r\n    if (!token) {\r\n        res.status(401).send({\r\n          errors: 'Please authenticate using valid token'\r\n        })\r\n    }\r\n      else\r\n      {\r\n          try{\r\n            const data = jwt.verify(token, 'secret_ecom')\r\n            req.user = data.user\r\n            next()\r\n          }catch(error){\r\n            res.status(401).send({errors: \"Please authenticate using valid token\"})\r\n            console.log(error)\r\n          }\r\n        }\r\n}\r\n\r\n// creating endpoint for adding product in cartData\r\n// app.post('/addtocart', fetchUser , async (req, res) => {\r\n//   // console.log('Added', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData && userData.cartData){\r\n//     userData.cartData[req.body.itemId] += 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Added\")\r\n//   }else{\r\n//     console.log('chưa có userData')\r\n//   }\r\n// })\r\napp.post('/addtocart', fetchUser , async (req, res) => {\r\n  // console.log(req.body.cartItem)\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\r\n    if (!userData.cartDetails) {\r\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\r\n    }\r\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\r\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (existingItemIndex !== -1) {\r\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\r\n      userData.cartDetails[existingItemIndex].quantity += 1;\r\n    } else {\r\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\r\n      userData.cartDetails.push({\r\n        ...req.body.cartItem,\r\n        quantity: 1\r\n      });\r\n    }\r\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n    await userData.save();\r\n\r\n    res.status(200).send(\"Item added to cart successfully\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\r\n//   console.log('Removed', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData.cartData[req.body.itemId] > 0) {\r\n//     userData.cartData[req.body.itemId] -= 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Removed\")\r\n//   }\r\n// })\r\n\r\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({ _id: userId });\r\n\r\n    if (!userData) {\r\n      return res.status(404).send(\"User not found\");\r\n    }\r\n\r\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\r\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\r\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      \r\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\r\n      userData.cartDetails[itemIndex].quantity -= 1;\r\n      \r\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n      await userData.save();\r\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      console.log('userData', userData)\r\n      \r\n      return res.status(200).send(\"Item quantity decremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"No items to decrement\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/incrementformcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    const userData = await Users.findOneAndUpdate(\r\n      { _id: userId, \"cartDetails.id\": itemId }, // Tìm người dùng với ID và itemId phù hợp\r\n      { $inc: { \"cartDetails.$.quantity\": 1 } }, // Tăng quantity của mục có itemId tương ứng\r\n      { new: true } // Trả về tài liệu đã cập nhật\r\n    );\r\n\r\n    if (userData) {\r\n      return res.status(200).send(\"Item quantity incremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"Item not found in cart\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\r\napp.post('/removefromcart', fetchUser , async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n\r\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\r\n    if (userData && userData.cartDetails) {\r\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n      if (existingItemIndex !== -1) {\r\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\r\n        await userData.save();\r\n        return res.status(200).send(\"Item removed from cart successfully\");\r\n      }\r\n    }\r\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\r\n    res.status(400).send(\"Item not found in cart\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n// app.post('/removefromcart', fetchUser , async (req, res) => {\r\n//   try {\r\n//     const userId = req.user.id;\r\n//     const itemId = req.body.itemId;\r\n\r\n//     let userData = await Users.findOne({_id: userId});\r\n\r\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\r\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\r\n//       userData.cartData[itemId] = 0;\r\n\r\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\r\n//       res.status(200).send(\"All items removed\");\r\n//     } else {\r\n//       res.status(400).send(\"No items to remove\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     res.status(500).send(\"Internal server error\");\r\n//   }\r\n// });\r\n\r\n// creating endpoint to get cartdata\r\n// creating endpoint to get cartdata\r\n\r\n// app.post('/getcart', fetchUser, async (req, res) => {\r\n//   try {\r\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\r\n//       const userId = req.user.id;\r\n//       // Tìm người dùng trong cơ sở dữ liệu\r\n//       const userData = await Users.findOne({ _id: userId });\r\n\r\n//       console.log('userData', userData)\r\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\r\n//       if (userData && userData.cartData) {\r\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\r\n//           res.json(userData.cartData);\r\n//       } else {\r\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\r\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\r\n//       }\r\n//   } catch (error) {\r\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\r\n//       console.error(error);\r\n//       res.status(500).json({ success: false, message: 'Internal server error' });\r\n//   }\r\n// });\r\n\r\n\r\n// creating endpoint for checkout cart\r\napp.post('/orderList', async (req, res) => {\r\n  try{\r\n    const order = req.body\r\n    const user = await Users.findOne({\r\n        email:  order.customerInfo.email\r\n    })\r\n    if(!user){\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: 'User not found'\r\n      })\r\n    }\r\n    const newOrder = { \r\n      orderId : order.orderId,\r\n      orderInfo : {\r\n        ...order.orderInfo,\r\n        orderDate: order.orderInfo.orderDate\r\n      },\r\n      orderDetails: order.orderDetails,\r\n      customerInfo : order.customerInfo\r\n    }\r\n\r\n    user.orderList.push(newOrder)\r\n\r\n    await user.save()\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Order successfully processed and saved'\r\n    })\r\n  }catch(error){\r\n    console.log(error)\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Internal server error'\r\n    })\r\n  }\r\n})\r\n// endpoint get all orderList\r\n\r\napp.get('/orderList', async (req, res) => {\r\n  try {\r\n   \r\n    const users = await Users.find({}, 'orderList');\r\n    const allOrderList = users.map(user => user.orderList);\r\n\r\n    const orderList = allOrderList.flat()\r\n\r\n    res.status(200).json(orderList);\r\n  } catch (error) {\r\n    console.error('Error while fetching all cartDetails:', error);\r\n    res.status(500).json({ error: 'Internal server error' });\r\n  }\r\n});\r\n\r\napp.listen(port, (error) => {\r\n  if(!error){\r\n    console.log(\"Server Running on port: \" + port)\r\n  }else{\r\n    console.log(\"Error:\" + error)\r\n  }\r\n})"],"mappings":"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"}},"mtime":1709651947237}}