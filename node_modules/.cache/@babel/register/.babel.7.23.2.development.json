{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"filename\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:development":{"value":{"code":"const port = 4000;\nconst express = require('express');\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst jwt = require(\"jsonwebtoken\");\nconst path = require(\"path\");\nconst cors = require('cors');\nconst {\n  v4: uuid\n} = require('uuid');\nconst cloudinary = require('cloudinary').v2;\nconst {\n  CloudinaryStorage\n} = require('multer-storage-cloudinary');\nconst multer = require(\"multer\");\napp.use(express.json());\napp.use(cors());\n\n// Database connection with MongoDB\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\");\n\n// API creation\napp.get(\"/\", (req, res) => {\n  res.send(\"Express App is Running\");\n});\n\n// Cloudinary configuration\ncloudinary.config({\n  cloud_name: 'defmx7amw',\n  api_key: '781925426129789',\n  api_secret: 'AQNuKUvEsvwB0i4bzf2mFxwUzwk'\n});\nconst storage = new CloudinaryStorage({\n  cloudinary: cloudinary,\n  folder: 'SHOPPER',\n  // Đổi folder tùy theo yêu cầu của bạn\n  allowedFormats: ['jpg', 'png', 'jpeg']\n});\nconst upload = multer({\n  storage: storage\n});\n\n// Endpoint for uploading images\napp.post('/upload', upload.single('product'), (req, res) => {\n  // console.log(\"req\", req.file)\n  const link_img = req.file.path; // Đây là đường dẫn Cloudinary\n  res.json({\n    success: 1,\n    image_url: link_img\n  });\n});\n\n// Static middleware path\n// Đường dẫn phải trỏ đến Cloudinary, không phải địa chỉ cục bộ\n// app.use('/images', express.static('https://res.cloudinary.com/defmx7amw/image/upload/upload'))\n\n// Schema for creating product\nconst Product = mongoose.model(\"Product\", {\n  id: {\n    type: Number,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  image: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true\n  },\n  new_price: {\n    type: Number,\n    required: true\n  },\n  old_price: {\n    type: Number,\n    required: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  },\n  available: {\n    // Sửa thành \"available\"\n    type: Boolean,\n    default: true\n  }\n});\napp.post('/addproduct', async (req, res) => {\n  let products = await Product.find({});\n  let id;\n  if (products.length > 0) {\n    let last_product_array = products.slice(-1);\n    last_product = last_product_array[0];\n    id = last_product.id + 1;\n  } else {\n    id = 1;\n  }\n  const product = new Product({\n    id: id,\n    // luôn bằng thằng cuối tăng lên 1\n    name: req.body.name,\n    image: req.body.image,\n    category: req.body.category,\n    new_price: req.body.new_price,\n    old_price: req.body.old_price\n  });\n  await product.save();\n  console.log(\"Saved\");\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n\n// Creating API for deleting product\n\napp.post('/removeproduct', async (req, res) => {\n  await Product.findOneAndDelete({\n    id: req.body.id\n  });\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n// creating API for getting all products\napp.get('/allproduct', async (req, res) => {\n  try {\n    let start = parseInt(req.query.start) || 0;\n    let limit = parseInt(req.query.limit) || 12;\n    let category = req.query.category;\n    let query = {};\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\n    if (category) {\n      query.category = category;\n    }\n    let products;\n\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\n    if (!isNaN(start) && !isNaN(limit) && category) {\n      products = await Product.find(query).skip(start).limit(limit);\n    } else {\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\n      products = await Product.find({});\n    }\n    res.json({\n      success: true,\n      data: products\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Internal server error\"\n    });\n  }\n});\nconst Users = mongoose.model('Users', {\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  orderList: {\n    type: Array\n  },\n  cartDetails: {\n    type: Array,\n    default: []\n  },\n  data: {\n    type: Date,\n    default: Date.now\n  }\n});\napp.post('/signup', async (req, res) => {\n  let check = await Users.findOne({\n    email: req.body.email\n  });\n  if (check) {\n    return res.status(400).json({\n      success: false,\n      errors: 'existing user found with same email'\n    });\n  }\n  let cart = {};\n  for (let i = 0; i < 300; i++) {\n    cart[i] = 0;\n  }\n  const user = new Users({\n    name: req.body.username,\n    email: req.body.email,\n    password: req.body.password,\n    orderList: [],\n    cartData: cart\n  });\n  await user.save();\n  const data = {\n    user: {\n      id: user.id,\n      username: user.name,\n      email: user.email\n    }\n  };\n  const token = jwt.sign(data, 'secret_ecom');\n  res.json({\n    success: true,\n    token,\n    username: user.name,\n    email: user.email\n  }); // Sửa ở đây\n});\n\n//creating endpoint for user login \napp.post('/login', async (req, res) => {\n  let user = await Users.findOne({\n    email: req.body.email\n  });\n  if (user) {\n    const passCompare = req.body.password === user.password;\n    if (passCompare) {\n      const data = {\n        user: {\n          id: user.id,\n          username: user.name,\n          email: user.email\n        }\n      };\n      const token = jwt.sign(data, 'secret_ecom');\n      res.json({\n        success: true,\n        token,\n        username: user.name,\n        email: user.email\n      }); // Sửa ở đây\n    } else {\n      res.json({\n        success: false,\n        errors: 'Wrong Password'\n      });\n    }\n  } else {\n    res.json({\n      success: false,\n      errors: 'Wrong Email Id'\n    });\n  }\n});\n\n// creating endpoint for newcollection data\napp.get('/popular', async (req, res) => {\n  try {\n    const limit = 4;\n    const category = 'women';\n    const popularProducts = await Product.find({\n      category\n    }).limit(limit);\n    res.json({\n      success: true,\n      data: popularProducts\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Internal server error\"\n    });\n  }\n});\n// creating endpoint for newcollection data\n// app.get('/newcollection', async (req, res) => {\n//   let products = await Product.find({})\n//   let newcollection = products.slices\n// })\n\n// creating middleware to fetch user\n\nconst fetchUser = async (req, res, next) => {\n  const token = req.header('auth-token');\n  // console.log(token)\n  if (!token) {\n    res.status(401).send({\n      errors: 'Please authenticate using valid token'\n    });\n  } else {\n    try {\n      const data = jwt.verify(token, 'secret_ecom');\n      req.user = data.user;\n      next();\n    } catch (error) {\n      res.status(401).send({\n        errors: \"Please authenticate using valid token\"\n      });\n      console.log(error);\n    }\n  }\n};\n\n// creating endpoint for adding product in cartData\n// app.post('/addtocart', fetchUser , async (req, res) => {\n//   // console.log('Added', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData && userData.cartData){\n//     userData.cartData[req.body.itemId] += 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Added\")\n//   }else{\n//     console.log('chưa có userData')\n//   }\n// })\napp.post('/addtocart', fetchUser, async (req, res) => {\n  // console.log(req.body.cartItem)\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\n    if (!userData.cartDetails) {\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\n    }\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (existingItemIndex !== -1) {\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\n      userData.cartDetails[existingItemIndex].quantity += 1;\n    } else {\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\n      userData.cartDetails.push({\n        ...req.body.cartItem,\n        quantity: 1\n      });\n    }\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n    await userData.save();\n    res.status(200).send(\"Item added to cart successfully\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\n//   console.log('Removed', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData.cartData[req.body.itemId] > 0) {\n//     userData.cartData[req.body.itemId] -= 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Removed\")\n//   }\n// })\n\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    if (!userData) {\n      return res.status(404).send(\"User not found\");\n    }\n\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\n\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\n      userData.cartDetails[itemIndex].quantity -= 1;\n\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n      await userData.save();\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\n      console.log('userData', userData);\n      return res.status(200).send(\"Item quantity decremented successfully\");\n    } else {\n      return res.status(400).send(\"No items to decrement\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\napp.post('/incrementformcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    const userData = await Users.findOneAndUpdate({\n      _id: userId,\n      \"cartDetails.id\": itemId\n    },\n    // Tìm người dùng với ID và itemId phù hợp\n    {\n      $inc: {\n        \"cartDetails.$.quantity\": 1\n      }\n    },\n    // Tăng quantity của mục có itemId tương ứng\n    {\n      new: true\n    } // Trả về tài liệu đã cập nhật\n    );\n\n    if (userData) {\n      return res.status(200).send(\"Item quantity incremented successfully\");\n    } else {\n      return res.status(400).send(\"Item not found in cart\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\napp.post('/removefromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\n    if (userData && userData.cartDetails) {\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n      if (existingItemIndex !== -1) {\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\n        await userData.save();\n        return res.status(200).send(\"Item removed from cart successfully\");\n      }\n    }\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\n    res.status(400).send(\"Item not found in cart\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/removefromcart', fetchUser , async (req, res) => {\n//   try {\n//     const userId = req.user.id;\n//     const itemId = req.body.itemId;\n\n//     let userData = await Users.findOne({_id: userId});\n\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\n//       userData.cartData[itemId] = 0;\n\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\n//       res.status(200).send(\"All items removed\");\n//     } else {\n//       res.status(400).send(\"No items to remove\");\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     res.status(500).send(\"Internal server error\");\n//   }\n// });\n\n// creating endpoint to get cartdata\n// creating endpoint to get cartdata\n\n// app.post('/getcart', fetchUser, async (req, res) => {\n//   try {\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\n//       const userId = req.user.id;\n//       // Tìm người dùng trong cơ sở dữ liệu\n//       const userData = await Users.findOne({ _id: userId });\n\n//       console.log('userData', userData)\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\n//       if (userData && userData.cartData) {\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\n//           res.json(userData.cartData);\n//       } else {\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\n//       }\n//   } catch (error) {\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\n//       console.error(error);\n//       res.status(500).json({ success: false, message: 'Internal server error' });\n//   }\n// });\n\n// creating endpoint for checkout cart\napp.post('/orderList', async (req, res) => {\n  try {\n    const order = req.body;\n    const user = await Users.findOne({\n      email: order.customerInfo.email\n    });\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    const newOrder = {\n      orderId: order.orderId,\n      orderInfo: {\n        ...order.orderInfo,\n        orderDate: order.orderInfo.orderDate\n      },\n      orderDetails: order.orderDetails,\n      customerInfo: order.customerInfo\n    };\n    user.orderList.push(newOrder);\n    await user.save();\n    res.status(200).json({\n      success: true,\n      message: 'Order successfully processed and saved'\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n// endpoint get all orderList\n\napp.get('/orderList', async (req, res) => {\n  try {\n    const users = await Users.find({}, 'orderList');\n    const allOrderList = users.map(user => user.orderList);\n    const orderList = allOrderList.flat();\n    res.status(200).json(orderList);\n  } catch (error) {\n    console.error('Error while fetching all cartDetails:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\n\n// const port = process.env.PORT || 4000 Sử dụng cổng do Render cung cấp hoặc 4000 nếu không có cổng nào được cung cấp\n\napp.listen(port, error => {\n  if (!error) {\n    console.log(\"Production: Server Running on port: \" + port);\n  } else {\n    console.log(\"Error:\" + error);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwb3J0IiwiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJtb25nb29zZSIsImp3dCIsInBhdGgiLCJjb3JzIiwidjQiLCJ1dWlkIiwiY2xvdWRpbmFyeSIsInYyIiwiQ2xvdWRpbmFyeVN0b3JhZ2UiLCJtdWx0ZXIiLCJ1c2UiLCJqc29uIiwiY29ubmVjdCIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJjb25maWciLCJjbG91ZF9uYW1lIiwiYXBpX2tleSIsImFwaV9zZWNyZXQiLCJzdG9yYWdlIiwiZm9sZGVyIiwiYWxsb3dlZEZvcm1hdHMiLCJ1cGxvYWQiLCJwb3N0Iiwic2luZ2xlIiwibGlua19pbWciLCJmaWxlIiwic3VjY2VzcyIsImltYWdlX3VybCIsIlByb2R1Y3QiLCJtb2RlbCIsImlkIiwidHlwZSIsIk51bWJlciIsInJlcXVpcmVkIiwibmFtZSIsIlN0cmluZyIsImltYWdlIiwiY2F0ZWdvcnkiLCJuZXdfcHJpY2UiLCJvbGRfcHJpY2UiLCJkYXRlIiwiRGF0ZSIsImRlZmF1bHQiLCJub3ciLCJhdmFpbGFibGUiLCJCb29sZWFuIiwicHJvZHVjdHMiLCJmaW5kIiwibGVuZ3RoIiwibGFzdF9wcm9kdWN0X2FycmF5Iiwic2xpY2UiLCJsYXN0X3Byb2R1Y3QiLCJwcm9kdWN0IiwiYm9keSIsInNhdmUiLCJjb25zb2xlIiwibG9nIiwiZmluZE9uZUFuZERlbGV0ZSIsInN0YXJ0IiwicGFyc2VJbnQiLCJxdWVyeSIsImxpbWl0IiwiaXNOYU4iLCJza2lwIiwiZGF0YSIsImVycm9yIiwic3RhdHVzIiwibWVzc2FnZSIsIlVzZXJzIiwiZW1haWwiLCJwYXNzd29yZCIsIm9yZGVyTGlzdCIsIkFycmF5IiwiY2FydERldGFpbHMiLCJjaGVjayIsImZpbmRPbmUiLCJlcnJvcnMiLCJjYXJ0IiwiaSIsInVzZXIiLCJ1c2VybmFtZSIsImNhcnREYXRhIiwidG9rZW4iLCJzaWduIiwicGFzc0NvbXBhcmUiLCJwb3B1bGFyUHJvZHVjdHMiLCJmZXRjaFVzZXIiLCJuZXh0IiwiaGVhZGVyIiwidmVyaWZ5IiwidXNlcklkIiwiaXRlbUlkIiwiY2FydEl0ZW0iLCJ1c2VyRGF0YSIsIl9pZCIsImV4aXN0aW5nSXRlbUluZGV4IiwiZmluZEluZGV4IiwiaXRlbSIsInF1YW50aXR5IiwicHVzaCIsIml0ZW1JbmRleCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkaW5jIiwibmV3Iiwic3BsaWNlIiwib3JkZXIiLCJjdXN0b21lckluZm8iLCJuZXdPcmRlciIsIm9yZGVySWQiLCJvcmRlckluZm8iLCJvcmRlckRhdGUiLCJvcmRlckRldGFpbHMiLCJ1c2VycyIsImFsbE9yZGVyTGlzdCIsIm1hcCIsImZsYXQiLCJsaXN0ZW4iXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccXVhbnRcXERlc2t0b3BcXFZpdGVQcm9qZWN0XFxQUk9KRUNUXFxiYWNrZW5kXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBvcnQgPSA0MDAwO1xyXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKVxyXG5jb25zdCBqd3QgPSByZXF1aXJlKFwianNvbndlYnRva2VuXCIpXHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5jb25zdCB7IHY0OiB1dWlkIH0gPSByZXF1aXJlKCd1dWlkJylcclxuY29uc3QgY2xvdWRpbmFyeSA9IHJlcXVpcmUoJ2Nsb3VkaW5hcnknKS52MjtcclxuY29uc3QgeyBDbG91ZGluYXJ5U3RvcmFnZSB9ID0gcmVxdWlyZSgnbXVsdGVyLXN0b3JhZ2UtY2xvdWRpbmFyeScpO1xyXG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKFwibXVsdGVyXCIpXHJcblxyXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKVxyXG5hcHAudXNlKGNvcnMoKSlcclxuXHJcbi8vIERhdGFiYXNlIGNvbm5lY3Rpb24gd2l0aCBNb25nb0RCXHJcbm1vbmdvb3NlLmNvbm5lY3QoXCJtb25nb2RiK3NydjovL3RxdWFuZG9vOlF1YW4yNDAxQGNsdXN0ZXIwLm9rMnhtb2UubW9uZ29kYi5uZXQvRWNvbW1lcmNlXCIpXHJcblxyXG4vLyBBUEkgY3JlYXRpb25cclxuYXBwLmdldChcIi9cIiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICByZXMuc2VuZChcIkV4cHJlc3MgQXBwIGlzIFJ1bm5pbmdcIilcclxufSlcclxuXHJcbi8vIENsb3VkaW5hcnkgY29uZmlndXJhdGlvblxyXG5jbG91ZGluYXJ5LmNvbmZpZyh7IFxyXG4gIGNsb3VkX25hbWU6ICdkZWZteDdhbXcnLCBcclxuICBhcGlfa2V5OiAnNzgxOTI1NDI2MTI5Nzg5JywgXHJcbiAgYXBpX3NlY3JldDogJ0FRTnVLVXZFc3Z3QjBpNGJ6ZjJtRnh3VXp3aycgXHJcbn0pO1xyXG5cclxuY29uc3Qgc3RvcmFnZSA9IG5ldyBDbG91ZGluYXJ5U3RvcmFnZSh7XHJcbiAgY2xvdWRpbmFyeTogY2xvdWRpbmFyeSxcclxuICBmb2xkZXI6ICdTSE9QUEVSJywgLy8gxJDhu5VpIGZvbGRlciB0w7l5IHRoZW8gecOqdSBj4bqndSBj4bunYSBi4bqhblxyXG4gIGFsbG93ZWRGb3JtYXRzOiBbJ2pwZycsICdwbmcnLCAnanBlZyddLFxyXG59KVxyXG5cclxuY29uc3QgdXBsb2FkID0gbXVsdGVyKHsgc3RvcmFnZTogc3RvcmFnZSB9KVxyXG5cclxuLy8gRW5kcG9pbnQgZm9yIHVwbG9hZGluZyBpbWFnZXNcclxuYXBwLnBvc3QoJy91cGxvYWQnLCB1cGxvYWQuc2luZ2xlKCdwcm9kdWN0JyksIChyZXEsIHJlcykgPT4ge1xyXG4gIC8vIGNvbnNvbGUubG9nKFwicmVxXCIsIHJlcS5maWxlKVxyXG4gIGNvbnN0IGxpbmtfaW1nID0gcmVxLmZpbGUucGF0aCAvLyDEkMOieSBsw6AgxJHGsOG7nW5nIGThuqtuIENsb3VkaW5hcnlcclxuICByZXMuanNvbih7XHJcbiAgICBzdWNjZXNzOiAxLFxyXG4gICAgaW1hZ2VfdXJsOiBsaW5rX2ltZ1xyXG4gIH0pXHJcbn0pICBcclxuXHJcbi8vIFN0YXRpYyBtaWRkbGV3YXJlIHBhdGhcclxuLy8gxJDGsOG7nW5nIGThuqtuIHBo4bqjaSB0cuG7jyDEkeG6v24gQ2xvdWRpbmFyeSwga2jDtG5nIHBo4bqjaSDEkeG7i2EgY2jhu4kgY+G7pWMgYuG7mVxyXG4vLyBhcHAudXNlKCcvaW1hZ2VzJywgZXhwcmVzcy5zdGF0aWMoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2RlZm14N2Ftdy9pbWFnZS91cGxvYWQvdXBsb2FkJykpXHJcblxyXG4vLyBTY2hlbWEgZm9yIGNyZWF0aW5nIHByb2R1Y3RcclxuY29uc3QgUHJvZHVjdCA9IG1vbmdvb3NlLm1vZGVsKFwiUHJvZHVjdFwiLCB7XHJcbiAgaWQ6IHtcclxuICAgIHR5cGU6IE51bWJlcixcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgbmFtZToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBpbWFnZTp7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIGNhdGVnb3J5OiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIG5ld19wcmljZToge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIG9sZF9wcmljZToge1xyXG4gICAgdHlwZTogTnVtYmVyLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIGRhdGU6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vd1xyXG4gIH0sXHJcbiAgYXZhaWxhYmxlOiB7IC8vIFPhu61hIHRow6BuaCBcImF2YWlsYWJsZVwiXHJcbiAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgZGVmYXVsdDogdHJ1ZSxcclxuICB9XHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL2FkZHByb2R1Y3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7fSlcclxuICAgIGxldCBpZFxyXG4gICAgaWYocHJvZHVjdHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGxldCBsYXN0X3Byb2R1Y3RfYXJyYXkgPSBwcm9kdWN0cy5zbGljZSgtMSlcclxuICAgICAgICBsYXN0X3Byb2R1Y3QgPSBsYXN0X3Byb2R1Y3RfYXJyYXlbMF1cclxuICAgICAgICBpZCA9IGxhc3RfcHJvZHVjdC5pZCArIDE7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgaWQgPSAxXHJcbiAgICB9XHJcbiAgICAgICAgY29uc3QgcHJvZHVjdCA9IG5ldyBQcm9kdWN0ICh7XHJcbiAgICAgICAgICBpZDogaWQsIC8vIGx1w7RuIGLhurFuZyB0aOG6sW5nIGN14buRaSB0xINuZyBsw6puIDFcclxuICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWUsXHJcbiAgICAgICAgICBpbWFnZTogcmVxLmJvZHkuaW1hZ2UsXHJcbiAgICAgICAgICBjYXRlZ29yeTogcmVxLmJvZHkuY2F0ZWdvcnksXHJcbiAgICAgICAgICBuZXdfcHJpY2U6IHJlcS5ib2R5Lm5ld19wcmljZSxcclxuICAgICAgICAgIG9sZF9wcmljZTogcmVxLmJvZHkub2xkX3ByaWNlLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgYXdhaXQgcHJvZHVjdC5zYXZlKClcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlNhdmVkXCIpXHJcbiAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWVcclxuICAgICAgICB9KVxyXG59KVxyXG5cclxuLy8gQ3JlYXRpbmcgQVBJIGZvciBkZWxldGluZyBwcm9kdWN0XHJcblxyXG5hcHAucG9zdCgnL3JlbW92ZXByb2R1Y3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBhd2FpdCBQcm9kdWN0LmZpbmRPbmVBbmREZWxldGUoe1xyXG4gICAgaWQ6IHJlcS5ib2R5LmlkXHJcbiAgfSlcclxuICByZXMuanNvbih7XHJcbiAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgbmFtZTogcmVxLmJvZHkubmFtZVxyXG4gIH0pXHJcbn0pXHJcbi8vIGNyZWF0aW5nIEFQSSBmb3IgZ2V0dGluZyBhbGwgcHJvZHVjdHNcclxuYXBwLmdldCgnL2FsbHByb2R1Y3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgbGV0IHN0YXJ0ID0gcGFyc2VJbnQocmVxLnF1ZXJ5LnN0YXJ0KSB8fCAwOyBcclxuICAgIGxldCBsaW1pdCA9IHBhcnNlSW50KHJlcS5xdWVyeS5saW1pdCkgfHwgMTI7IFxyXG4gICAgbGV0IGNhdGVnb3J5ID0gcmVxLnF1ZXJ5LmNhdGVnb3J5OyBcclxuICAgIGxldCBxdWVyeSA9IHt9O1xyXG4gICAgLy8gTuG6v3UgY2F0ZWdvcnkgxJHGsOG7o2MgY2jhu4kgxJHhu4tuaCwgdGjDqm0gbsOzIHbDoG8gxJFp4buBdSBraeG7h24gdHJ1eSB24bqlblxyXG4gICAgaWYgKGNhdGVnb3J5KSB7XHJcbiAgICAgIHF1ZXJ5LmNhdGVnb3J5ID0gY2F0ZWdvcnk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHByb2R1Y3RzO1xyXG5cclxuICAgIC8vIE7hur91IGPhuqMgc3RhcnQsIGxpbWl0IHbDoCBjYXRlZ29yeSDEkeG7gXUgxJHGsOG7o2MgY2jhu4kgxJHhu4tuaCwgdGjhu7FjIGhp4buHbiBs4bqleSBz4bqjbiBwaOG6qW0gdGhlbyBjw6FjIMSRaeG7gXUga2nhu4duIG7DoHlcclxuICAgIGlmICghaXNOYU4oc3RhcnQpICYmICFpc05hTihsaW1pdCkgJiYgY2F0ZWdvcnkpIHtcclxuICAgICAgcHJvZHVjdHMgPSBhd2FpdCBQcm9kdWN0LmZpbmQocXVlcnkpLnNraXAoc3RhcnQpLmxpbWl0KGxpbWl0KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIE7hur91IGtow7RuZyBjw7MgY+G6oyBzdGFydCwgbGltaXQgaG/hurdjIGNhdGVnb3J5LCBob+G6t2MgdGhp4bq/dSBi4bqldCBr4buzIHRoYW0gc+G7kSBuw6BvLCBs4bqleSB04bqldCBj4bqjIHPhuqNuIHBo4bqpbVxyXG4gICAgICBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7fSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVzLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBkYXRhOiBwcm9kdWN0c1xyXG4gICAgfSk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIgfSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IFVzZXJzID0gbW9uZ29vc2UubW9kZWwoJ1VzZXJzJyAsIHtcclxuICBuYW1lOiB7XHJcbiAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIGVtYWlsOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZVxyXG4gIH0sXHJcbiAgcGFzc3dvcmQ6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgfSxcclxuICBvcmRlckxpc3Q6IHtcclxuICAgICAgdHlwZTogQXJyYXksXHJcbiAgfSxcclxuICBjYXJ0RGV0YWlsczoge1xyXG4gICAgdHlwZTogQXJyYXksXHJcbiAgICBkZWZhdWx0OiBbXSxcclxuICB9LFxyXG4gIGRhdGE6IHtcclxuICAgIHR5cGU6IERhdGUsXHJcbiAgICBkZWZhdWx0OiBEYXRlLm5vdyxcclxuICB9XHJcbn0pO1xyXG5hcHAucG9zdCgnL3NpZ251cCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgbGV0IGNoZWNrID0gIGF3YWl0IFVzZXJzLmZpbmRPbmUoe2VtYWlsOiByZXEuYm9keS5lbWFpbH0pXHJcbiAgICBpZihjaGVjaykge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yczogJ2V4aXN0aW5nIHVzZXIgZm91bmQgd2l0aCBzYW1lIGVtYWlsJ1xyXG4gICAgICB9KSBcclxuICAgIH1cclxuICAgIGxldCBjYXJ0ID0ge307XHJcbiAgICBmb3IoIGxldCBpID0gMDsgaSA8IDMwMCA7IGkrKyl7XHJcbiAgICAgIGNhcnRbaV0gPSAwO1xyXG4gICAgfVxyXG4gICAgY29uc3QgdXNlciA9IG5ldyBVc2Vycyh7XHJcbiAgICAgICAgbmFtZTogcmVxLmJvZHkudXNlcm5hbWUsXHJcbiAgICAgICAgZW1haWw6IHJlcS5ib2R5LmVtYWlsLFxyXG4gICAgICAgIHBhc3N3b3JkOiByZXEuYm9keS5wYXNzd29yZCxcclxuICAgICAgICBvcmRlckxpc3Q6IFtdLFxyXG4gICAgICAgIGNhcnREYXRhOiBjYXJ0LFxyXG4gICAgfSlcclxuICAgIGF3YWl0IHVzZXIuc2F2ZSgpXHJcbiAgICBjb25zdCBkYXRhID0ge1xyXG4gICAgICB1c2VyOiB7XHJcbiAgICAgICAgaWQ6IHVzZXIuaWQsXHJcbiAgICAgICAgdXNlcm5hbWU6IHVzZXIubmFtZSxcclxuICAgICAgICBlbWFpbDogdXNlci5lbWFpbFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCB0b2tlbiA9IGp3dC5zaWduKGRhdGEsICdzZWNyZXRfZWNvbScpXHJcbiAgICByZXMuanNvbih7IHN1Y2Nlc3M6IHRydWUsIFxyXG4gICAgICB0b2tlbiwgXHJcbiAgICAgIHVzZXJuYW1lOiB1c2VyLm5hbWUsIFxyXG4gICAgICBlbWFpbDogdXNlci5lbWFpbFxyXG4gICAgIH0pOyAvLyBT4butYSDhu58gxJHDonlcclxuICB9XHJcbilcclxuXHJcbi8vY3JlYXRpbmcgZW5kcG9pbnQgZm9yIHVzZXIgbG9naW4gXHJcbmFwcC5wb3N0KCcvbG9naW4nLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBsZXQgdXNlciA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe1xyXG4gICAgZW1haWw6IHJlcS5ib2R5LmVtYWlsXHJcbiAgfSk7XHJcbiAgXHJcbiAgaWYgKHVzZXIpIHtcclxuICAgIGNvbnN0IHBhc3NDb21wYXJlID0gcmVxLmJvZHkucGFzc3dvcmQgPT09IHVzZXIucGFzc3dvcmQ7XHJcbiAgICBpZiAocGFzc0NvbXBhcmUpIHtcclxuICAgICAgY29uc3QgZGF0YSA9IHtcclxuICAgICAgICB1c2VyOiB7XHJcbiAgICAgICAgICBpZDogdXNlci5pZCxcclxuICAgICAgICAgIHVzZXJuYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbFxyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihkYXRhLCAnc2VjcmV0X2Vjb20nKTtcclxuICAgICAgcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBcclxuICAgICAgICAgICAgICAgICAgICB0b2tlbiwgXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXIubmFtZSwgXHJcbiAgICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwgfSk7IC8vIFPhu61hIOG7nyDEkcOieVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3JzOiAnV3JvbmcgUGFzc3dvcmQnIH0pO1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICByZXMuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcnM6ICdXcm9uZyBFbWFpbCBJZCcgfSk7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIGNyZWF0aW5nIGVuZHBvaW50IGZvciBuZXdjb2xsZWN0aW9uIGRhdGFcclxuYXBwLmdldCgnL3BvcHVsYXInLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnl7XHJcbiAgICBjb25zdCBsaW1pdCA9IDRcclxuICAgIGNvbnN0IGNhdGVnb3J5ID0gJ3dvbWVuJ1xyXG5cclxuICAgIGNvbnN0IHBvcHVsYXJQcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7Y2F0ZWdvcnl9KS5saW1pdChsaW1pdClcclxuXHJcbiAgICByZXMuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIGRhdGE6IHBvcHVsYXJQcm9kdWN0c1xyXG4gICAgfSlcclxuICB9Y2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufSlcclxuLy8gY3JlYXRpbmcgZW5kcG9pbnQgZm9yIG5ld2NvbGxlY3Rpb24gZGF0YVxyXG4vLyBhcHAuZ2V0KCcvbmV3Y29sbGVjdGlvbicsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIGxldCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7fSlcclxuLy8gICBsZXQgbmV3Y29sbGVjdGlvbiA9IHByb2R1Y3RzLnNsaWNlc1xyXG4vLyB9KVxyXG5cclxuLy8gY3JlYXRpbmcgbWlkZGxld2FyZSB0byBmZXRjaCB1c2VyXHJcblxyXG5jb25zdCBmZXRjaFVzZXIgPSBhc3luYyAocmVxLHJlcywgbmV4dCkgPT4ge1xyXG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyKCdhdXRoLXRva2VuJylcclxuICAgIC8vIGNvbnNvbGUubG9nKHRva2VuKVxyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHtcclxuICAgICAgICAgIGVycm9yczogJ1BsZWFzZSBhdXRoZW50aWNhdGUgdXNpbmcgdmFsaWQgdG9rZW4nXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgICAgZWxzZVxyXG4gICAgICB7XHJcbiAgICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBqd3QudmVyaWZ5KHRva2VuLCAnc2VjcmV0X2Vjb20nKVxyXG4gICAgICAgICAgICByZXEudXNlciA9IGRhdGEudXNlclxyXG4gICAgICAgICAgICBuZXh0KClcclxuICAgICAgICAgIH1jYXRjaChlcnJvcil7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDAxKS5zZW5kKHtlcnJvcnM6IFwiUGxlYXNlIGF1dGhlbnRpY2F0ZSB1c2luZyB2YWxpZCB0b2tlblwifSlcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG59XHJcblxyXG4vLyBjcmVhdGluZyBlbmRwb2ludCBmb3IgYWRkaW5nIHByb2R1Y3QgaW4gY2FydERhdGFcclxuLy8gYXBwLnBvc3QoJy9hZGR0b2NhcnQnLCBmZXRjaFVzZXIgLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuLy8gICAvLyBjb25zb2xlLmxvZygnQWRkZWQnLCByZXEuYm9keS5pdGVtSWQpXHJcbi8vICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7X2lkOiByZXEudXNlci5pZH0pXHJcbi8vICAgaWYodXNlckRhdGEgJiYgdXNlckRhdGEuY2FydERhdGEpe1xyXG4vLyAgICAgdXNlckRhdGEuY2FydERhdGFbcmVxLmJvZHkuaXRlbUlkXSArPSAxXHJcbi8vICAgICBhd2FpdCBVc2Vycy5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IHJlcS51c2VyLmlkfSx7Y2FydERhdGE6IHVzZXJEYXRhLmNhcnREYXRhfSlcclxuLy8gICAgIHJlcy5zZW5kKFwiQWRkZWRcIilcclxuLy8gICB9ZWxzZXtcclxuLy8gICAgIGNvbnNvbGUubG9nKCdjaMawYSBjw7MgdXNlckRhdGEnKVxyXG4vLyAgIH1cclxuLy8gfSlcclxuYXBwLnBvc3QoJy9hZGR0b2NhcnQnLCBmZXRjaFVzZXIgLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAvLyBjb25zb2xlLmxvZyhyZXEuYm9keS5jYXJ0SXRlbSlcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XHJcbiAgICBjb25zdCBpdGVtSWQgPSByZXEuYm9keS5jYXJ0SXRlbS5pZDsgLy8gTOG6pXkgaWQgY+G7p2Egc+G6o24gcGjhuqltIHThu6sgcmVxdWVzdCBib2R5XHJcbiAgICBsZXQgdXNlckRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtfaWQ6IHVzZXJJZH0pO1xyXG4gICAgLy8gS2nhu4NtIHRyYSB4ZW0gbmfGsOG7nWkgZMO5bmcgxJHDoyBjw7MgZ2nhu48gaMOgbmcgaGF5IGNoxrBhXHJcbiAgICBpZiAoIXVzZXJEYXRhLmNhcnREZXRhaWxzKSB7XHJcbiAgICAgIHVzZXJEYXRhLmNhcnREZXRhaWxzID0gW107IC8vIE7hur91IGNoxrBhLCBraOG7n2kgdOG6oW8gZ2nhu48gaMOgbmcgY2hvIG5nxrDhu51pIGTDuW5nXHJcbiAgICB9XHJcbiAgICAvLyBUw6xtIHhlbSBz4bqjbiBwaOG6qW0gxJHDoyB04buTbiB04bqhaSB0cm9uZyBnaeG7jyBow6BuZyBj4bunYSBuZ8aw4budaSBkw7luZyBjaMawYVxyXG4gICAgY29uc3QgZXhpc3RpbmdJdGVtSW5kZXggPSB1c2VyRGF0YS5jYXJ0RGV0YWlscy5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09PSBpdGVtSWQpO1xyXG4gICAgaWYgKGV4aXN0aW5nSXRlbUluZGV4ICE9PSAtMSkge1xyXG4gICAgICAvLyBO4bq/dSBz4bqjbiBwaOG6qW0gxJHDoyB04buTbiB04bqhaSB0cm9uZyBnaeG7jyBow6BuZywgdMSDbmcgc+G7kSBsxrDhu6NuZyBsw6puIDFcclxuICAgICAgdXNlckRhdGEuY2FydERldGFpbHNbZXhpc3RpbmdJdGVtSW5kZXhdLnF1YW50aXR5ICs9IDE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBO4bq/dSBz4bqjbiBwaOG6qW0gY2jGsGEgdOG7k24gdOG6oWkgdHJvbmcgZ2nhu48gaMOgbmcsIHRow6ptIHPhuqNuIHBo4bqpbSB2w6BvIGdp4buPIGjDoG5nIHbhu5tpIHPhu5EgbMaw4bujbmcgbMOgIDFcclxuICAgICAgdXNlckRhdGEuY2FydERldGFpbHMucHVzaCh7XHJcbiAgICAgICAgLi4ucmVxLmJvZHkuY2FydEl0ZW0sXHJcbiAgICAgICAgcXVhbnRpdHk6IDFcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvLyBMxrB1IGPhuq1wIG5o4bqtdCBnaeG7jyBow6BuZyB2w6BvIGPGoSBz4bufIGThu68gbGnhu4d1XHJcbiAgICBhd2FpdCB1c2VyRGF0YS5zYXZlKCk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoXCJJdGVtIGFkZGVkIHRvIGNhcnQgc3VjY2Vzc2Z1bGx5XCIpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIpO1xyXG4gIH1cclxufSk7XHJcblxyXG4vLyBhcHAucG9zdCgnL2Rlc2NyZW1lbnRmcm9tY2FydCcsIGZldGNoVXNlciAsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIGNvbnNvbGUubG9nKCdSZW1vdmVkJywgcmVxLmJvZHkuaXRlbUlkKVxyXG4vLyAgIGxldCB1c2VyRGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe19pZDogcmVxLnVzZXIuaWR9KVxyXG4vLyAgIGlmKHVzZXJEYXRhLmNhcnREYXRhW3JlcS5ib2R5Lml0ZW1JZF0gPiAwKSB7XHJcbi8vICAgICB1c2VyRGF0YS5jYXJ0RGF0YVtyZXEuYm9keS5pdGVtSWRdIC09IDFcclxuLy8gICAgIGF3YWl0IFVzZXJzLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogcmVxLnVzZXIuaWR9LHtjYXJ0RGF0YTogdXNlckRhdGEuY2FydERhdGF9KVxyXG4vLyAgICAgcmVzLnNlbmQoXCJSZW1vdmVkXCIpXHJcbi8vICAgfVxyXG4vLyB9KVxyXG5cclxuLy8gRW5kcG9pbnQgxJHhu4MgZ2nhuqNtIHPhu5EgbMaw4bujbmcgY+G7p2EgbeG7mXQgc+G6o24gcGjhuqltIHRyb25nIGdp4buPIGjDoG5nXHJcbmFwcC5wb3N0KCcvZGVzY3JlbWVudGZyb21jYXJ0JywgZmV0Y2hVc2VyLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XHJcbiAgICBjb25zdCBpdGVtSWQgPSByZXEuYm9keS5pdGVtSWQ7IC8vIEzhuqV5IGlkIGPhu6dhIHPhuqNuIHBo4bqpbSB04burIHJlcXVlc3QgYm9keVxyXG4gICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7IF9pZDogdXNlcklkIH0pO1xyXG5cclxuICAgIGlmICghdXNlckRhdGEpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiVXNlciBub3QgZm91bmRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVMOsbSBjaOG7iSBt4bulYyBj4bunYSBz4bqjbiBwaOG6qW0gdHJvbmcgZ2nhu48gaMOgbmcgY+G7p2EgbmfGsOG7nWkgZMO5bmdcclxuICAgIGNvbnN0IGl0ZW1JbmRleCA9IHVzZXJEYXRhLmNhcnREZXRhaWxzLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT09IGl0ZW1JZCk7XHJcbiAgICBpZiAoaXRlbUluZGV4ICE9PSAtMSAmJiB1c2VyRGF0YS5jYXJ0RGV0YWlsc1tpdGVtSW5kZXhdICYmIHVzZXJEYXRhLmNhcnREZXRhaWxzW2l0ZW1JbmRleF0ucXVhbnRpdHkgPiAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwicXVhbnRpdHkgYmVmb3JlIGRlY3JlbWVudDpcIiwgdXNlckRhdGEuY2FydERldGFpbHNbaXRlbUluZGV4XS5xdWFudGl0eSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBO4bq/dSBz4bqjbiBwaOG6qW0gdOG7k24gdOG6oWkgdHJvbmcgZ2nhu48gaMOgbmcgdsOgIGPDsyBz4buRIGzGsOG7o25nIGzhu5tuIGjGoW4gMCwgZ2nhuqNtIHPhu5EgbMaw4bujbmcgxJFpIDFcclxuICAgICAgdXNlckRhdGEuY2FydERldGFpbHNbaXRlbUluZGV4XS5xdWFudGl0eSAtPSAxO1xyXG4gICAgICBcclxuICAgICAgLy8gTMawdSBj4bqtcCBuaOG6rXQgZ2nhu48gaMOgbmcgdsOgbyBjxqEgc+G7nyBk4buvIGxp4buHdVxyXG4gICAgICBhd2FpdCB1c2VyRGF0YS5zYXZlKCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwicXVhbnRpdHkgYWZ0ZXIgZGVjcmVtZW50OlwiLCB1c2VyRGF0YS5jYXJ0RGV0YWlsc1tpdGVtSW5kZXhdLnF1YW50aXR5KTtcclxuICAgICAgY29uc29sZS5sb2coJ3VzZXJEYXRhJywgdXNlckRhdGEpXHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoXCJJdGVtIHF1YW50aXR5IGRlY3JlbWVudGVkIHN1Y2Nlc3NmdWxseVwiKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZChcIk5vIGl0ZW1zIHRvIGRlY3JlbWVudFwiKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIik7XHJcbiAgfVxyXG59KTtcclxuXHJcblxyXG5cclxuXHJcbi8vIEVuZHBvaW50IMSR4buDIHTEg25nIHPhu5EgbMaw4bujbmcgY+G7p2EgbeG7mXQgc+G6o24gcGjhuqltIHRyb25nIGdp4buPIGjDoG5nXHJcbmFwcC5wb3N0KCcvaW5jcmVtZW50Zm9ybWNhcnQnLCBmZXRjaFVzZXIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcclxuICAgIGNvbnN0IGl0ZW1JZCA9IHJlcS5ib2R5Lml0ZW1JZDsgLy8gTOG6pXkgaWQgY+G7p2Egc+G6o24gcGjhuqltIHThu6sgcmVxdWVzdCBib2R5XHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmVBbmRVcGRhdGUoXHJcbiAgICAgIHsgX2lkOiB1c2VySWQsIFwiY2FydERldGFpbHMuaWRcIjogaXRlbUlkIH0sIC8vIFTDrG0gbmfGsOG7nWkgZMO5bmcgduG7m2kgSUQgdsOgIGl0ZW1JZCBwaMO5IGjhu6NwXHJcbiAgICAgIHsgJGluYzogeyBcImNhcnREZXRhaWxzLiQucXVhbnRpdHlcIjogMSB9IH0sIC8vIFTEg25nIHF1YW50aXR5IGPhu6dhIG3hu6VjIGPDsyBpdGVtSWQgdMawxqFuZyDhu6luZ1xyXG4gICAgICB7IG5ldzogdHJ1ZSB9IC8vIFRy4bqjIHbhu4EgdMOgaSBsaeG7h3UgxJHDoyBj4bqtcCBuaOG6rXRcclxuICAgICk7XHJcblxyXG4gICAgaWYgKHVzZXJEYXRhKSB7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChcIkl0ZW0gcXVhbnRpdHkgaW5jcmVtZW50ZWQgc3VjY2Vzc2Z1bGx5XCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiSXRlbSBub3QgZm91bmQgaW4gY2FydFwiKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLnNlbmQoXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIik7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIEVuZHBvaW50IMSR4buDIHjDs2EgbeG7mXQgc+G6o24gcGjhuqltIGto4buPaSBnaeG7jyBow6BuZ1xyXG5hcHAucG9zdCgnL3JlbW92ZWZyb21jYXJ0JywgZmV0Y2hVc2VyICwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVzZXJJZCA9IHJlcS51c2VyLmlkO1xyXG4gICAgY29uc3QgaXRlbUlkID0gcmVxLmJvZHkuaXRlbUlkOyAvLyBM4bqleSBpZCBj4bunYSBz4bqjbiBwaOG6qW0gdOG7qyByZXF1ZXN0IGJvZHlcclxuICAgIGxldCB1c2VyRGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe19pZDogdXNlcklkfSk7XHJcblxyXG4gICAgLy8gS2nhu4NtIHRyYSB4ZW0gbmfGsOG7nWkgZMO5bmcgY8OzIGdp4buPIGjDoG5nIGhheSBraMO0bmcgdsOgIGdp4buPIGjDoG5nIGPDsyBz4bqjbiBwaOG6qW0gxJHDsyBraMO0bmdcclxuICAgIGlmICh1c2VyRGF0YSAmJiB1c2VyRGF0YS5jYXJ0RGV0YWlscykge1xyXG4gICAgICBjb25zdCBleGlzdGluZ0l0ZW1JbmRleCA9IHVzZXJEYXRhLmNhcnREZXRhaWxzLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT09IGl0ZW1JZCk7XHJcbiAgICAgIGlmIChleGlzdGluZ0l0ZW1JbmRleCAhPT0gLTEpIHtcclxuICAgICAgICB1c2VyRGF0YS5jYXJ0RGV0YWlscy5zcGxpY2UoZXhpc3RpbmdJdGVtSW5kZXgsIDEpOyAvLyBYw7NhIHPhuqNuIHBo4bqpbSBraOG7j2kgZ2nhu48gaMOgbmdcclxuICAgICAgICBhd2FpdCB1c2VyRGF0YS5zYXZlKCk7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFwiSXRlbSByZW1vdmVkIGZyb20gY2FydCBzdWNjZXNzZnVsbHlcIik7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIE7hur91IGtow7RuZyB0w6xtIHRo4bqleSBz4bqjbiBwaOG6qW0sIHRy4bqjIHbhu4EgdGjDtG5nIGLDoW8gbOG7l2lcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiSXRlbSBub3QgZm91bmQgaW4gY2FydFwiKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZChcIkludGVybmFsIHNlcnZlciBlcnJvclwiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuXHJcbi8vIGFwcC5wb3N0KCcvcmVtb3ZlZnJvbWNhcnQnLCBmZXRjaFVzZXIgLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuLy8gICB0cnkge1xyXG4vLyAgICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XHJcbi8vICAgICBjb25zdCBpdGVtSWQgPSByZXEuYm9keS5pdGVtSWQ7XHJcblxyXG4vLyAgICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7X2lkOiB1c2VySWR9KTtcclxuXHJcbi8vICAgICBpZih1c2VyRGF0YSAmJiB1c2VyRGF0YS5jYXJ0RGF0YSAmJiB1c2VyRGF0YS5jYXJ0RGF0YVtpdGVtSWRdID4gMCkge1xyXG4vLyAgICAgICAvLyBYw7NhIGjhur90IHPhu5EgbMaw4bujbmcgc+G6o24gcGjhuqltIHRyb25nIGdp4buPIGjDoG5nIGNobyBpdGVtSWRcclxuLy8gICAgICAgdXNlckRhdGEuY2FydERhdGFbaXRlbUlkXSA9IDA7XHJcblxyXG4vLyAgICAgICBhd2FpdCBVc2Vycy5maW5kT25lQW5kVXBkYXRlKHtfaWQ6IHVzZXJJZH0sIHtjYXJ0RGF0YTogdXNlckRhdGEuY2FydERhdGF9KTtcclxuLy8gICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoXCJBbGwgaXRlbXMgcmVtb3ZlZFwiKTtcclxuLy8gICAgIH0gZWxzZSB7XHJcbi8vICAgICAgIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiTm8gaXRlbXMgdG8gcmVtb3ZlXCIpO1xyXG4vLyAgICAgfVxyXG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuLy8gICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIpO1xyXG4vLyAgIH1cclxuLy8gfSk7XHJcblxyXG4vLyBjcmVhdGluZyBlbmRwb2ludCB0byBnZXQgY2FydGRhdGFcclxuLy8gY3JlYXRpbmcgZW5kcG9pbnQgdG8gZ2V0IGNhcnRkYXRhXHJcblxyXG4vLyBhcHAucG9zdCgnL2dldGNhcnQnLCBmZXRjaFVzZXIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIHRyeSB7XHJcbi8vICAgICAgIC8vIFRydXkgeHXhuqV0IGThu68gbGnhu4d1IG5nxrDhu51pIGTDuW5nIHThu6sgbWlkZGxld2FyZSBmZXRjaFVzZXJcclxuLy8gICAgICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XHJcbi8vICAgICAgIC8vIFTDrG0gbmfGsOG7nWkgZMO5bmcgdHJvbmcgY8ahIHPhu58gZOG7ryBsaeG7h3VcclxuLy8gICAgICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHsgX2lkOiB1c2VySWQgfSk7XHJcblxyXG4vLyAgICAgICBjb25zb2xlLmxvZygndXNlckRhdGEnLCB1c2VyRGF0YSlcclxuLy8gICAgICAgLy8gS2nhu4NtIHRyYSB4ZW0gZOG7ryBsaeG7h3UgbmfGsOG7nWkgZMO5bmcgdsOgIGdp4buPIGjDoG5nIGPDsyB04buTbiB04bqhaSBraMO0bmdcclxuLy8gICAgICAgaWYgKHVzZXJEYXRhICYmIHVzZXJEYXRhLmNhcnREYXRhKSB7XHJcbi8vICAgICAgICAgICAvLyBO4bq/dSB04buTbiB04bqhaSwgdHLhuqMgduG7gSBk4buvIGxp4buHdSBnaeG7jyBow6BuZyBkxrDhu5tpIGThuqFuZyBKU09OXHJcbi8vICAgICAgICAgICByZXMuanNvbih1c2VyRGF0YS5jYXJ0RGF0YSk7XHJcbi8vICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgICAvLyBO4bq/dSBraMO0bmcgdMOsbSB0aOG6pXkgZOG7ryBsaeG7h3UgbmfGsOG7nWkgZMO5bmcgaG/hurdjIGdp4buPIGjDoG5nLCB0cuG6oyB24buBIHRow7RuZyBiw6FvIGzhu5dpXHJcbi8vICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnVXNlciBvciBjYXJ0IGRhdGEgbm90IGZvdW5kJyB9KTtcclxuLy8gICAgICAgfVxyXG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIC8vIFjhu60gbMO9IGzhu5dpIG7hur91IGPDsyBi4bqldCBr4buzIGzhu5dpIG7DoG8geOG6o3kgcmEgdHJvbmcgcXXDoSB0csOsbmggeOG7rSBsw70gecOqdSBj4bqndVxyXG4vLyAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuLy8gICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcicgfSk7XHJcbi8vICAgfVxyXG4vLyB9KTtcclxuXHJcblxyXG4vLyBjcmVhdGluZyBlbmRwb2ludCBmb3IgY2hlY2tvdXQgY2FydFxyXG5hcHAucG9zdCgnL29yZGVyTGlzdCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeXtcclxuICAgIGNvbnN0IG9yZGVyID0gcmVxLmJvZHlcclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtcclxuICAgICAgICBlbWFpbDogIG9yZGVyLmN1c3RvbWVySW5mby5lbWFpbFxyXG4gICAgfSlcclxuICAgIGlmKCF1c2VyKXtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBtZXNzYWdlOiAnVXNlciBub3QgZm91bmQnXHJcbiAgICAgIH0pXHJcbiAgICB9XHJcbiAgICBjb25zdCBuZXdPcmRlciA9IHsgXHJcbiAgICAgIG9yZGVySWQgOiBvcmRlci5vcmRlcklkLFxyXG4gICAgICBvcmRlckluZm8gOiB7XHJcbiAgICAgICAgLi4ub3JkZXIub3JkZXJJbmZvLFxyXG4gICAgICAgIG9yZGVyRGF0ZTogb3JkZXIub3JkZXJJbmZvLm9yZGVyRGF0ZVxyXG4gICAgICB9LFxyXG4gICAgICBvcmRlckRldGFpbHM6IG9yZGVyLm9yZGVyRGV0YWlscyxcclxuICAgICAgY3VzdG9tZXJJbmZvIDogb3JkZXIuY3VzdG9tZXJJbmZvXHJcbiAgICB9XHJcblxyXG4gICAgdXNlci5vcmRlckxpc3QucHVzaChuZXdPcmRlcilcclxuXHJcbiAgICBhd2FpdCB1c2VyLnNhdmUoKVxyXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICBtZXNzYWdlOiAnT3JkZXIgc3VjY2Vzc2Z1bGx5IHByb2Nlc3NlZCBhbmQgc2F2ZWQnXHJcbiAgICB9KVxyXG4gIH1jYXRjaChlcnJvcil7XHJcbiAgICBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIG1lc3NhZ2U6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InXHJcbiAgICB9KVxyXG4gIH1cclxufSlcclxuLy8gZW5kcG9pbnQgZ2V0IGFsbCBvcmRlckxpc3RcclxuXHJcbmFwcC5nZXQoJy9vcmRlckxpc3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCBVc2Vycy5maW5kKHt9LCAnb3JkZXJMaXN0Jyk7XHJcbiAgICBjb25zdCBhbGxPcmRlckxpc3QgPSB1c2Vycy5tYXAodXNlciA9PiB1c2VyLm9yZGVyTGlzdCk7XHJcblxyXG4gICAgY29uc3Qgb3JkZXJMaXN0ID0gYWxsT3JkZXJMaXN0LmZsYXQoKVxyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKG9yZGVyTGlzdCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHdoaWxlIGZldGNoaW5nIGFsbCBjYXJ0RGV0YWlsczonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNDAwMCBT4butIGThu6VuZyBj4buVbmcgZG8gUmVuZGVyIGN1bmcgY+G6pXAgaG/hurdjIDQwMDAgbuG6v3Uga2jDtG5nIGPDsyBj4buVbmcgbsOgbyDEkcaw4bujYyBjdW5nIGPhuqVwXHJcblxyXG5hcHAubGlzdGVuKHBvcnQsIChlcnJvcikgPT4ge1xyXG4gIGlmICghZXJyb3IpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiUHJvZHVjdGlvbjogU2VydmVyIFJ1bm5pbmcgb24gcG9ydDogXCIgKyBwb3J0KTtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc29sZS5sb2coXCJFcnJvcjpcIiArIGVycm9yKTtcclxuICB9XHJcbn0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHLElBQUk7QUFDakIsTUFBTUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxDQUFDLENBQUM7QUFDckIsTUFBTUcsUUFBUSxHQUFHRixPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNuQyxNQUFNSSxJQUFJLEdBQUdKLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsTUFBTUssSUFBSSxHQUFHTCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCLE1BQU07RUFBRU0sRUFBRSxFQUFFQztBQUFLLENBQUMsR0FBR1AsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUNwQyxNQUFNUSxVQUFVLEdBQUdSLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQ1MsRUFBRTtBQUMzQyxN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","map":{"version":3,"names":["port","express","require","app","mongoose","jwt","path","cors","v4","uuid","cloudinary","v2","CloudinaryStorage","multer","use","json","connect","get","req","res","send","config","cloud_name","api_key","api_secret","storage","folder","allowedFormats","upload","post","single","link_img","file","success","image_url","Product","model","id","type","Number","required","name","String","image","category","new_price","old_price","date","Date","default","now","available","Boolean","products","find","length","last_product_array","slice","last_product","product","body","save","console","log","findOneAndDelete","start","parseInt","query","limit","isNaN","skip","data","error","status","message","Users","email","password","orderList","Array","cartDetails","check","findOne","errors","cart","i","user","username","cartData","token","sign","passCompare","popularProducts","fetchUser","next","header","verify","userId","itemId","cartItem","userData","_id","existingItemIndex","findIndex","item","quantity","push","itemIndex","findOneAndUpdate","$inc","new","splice","order","customerInfo","newOrder","orderId","orderInfo","orderDate","orderDetails","users","allOrderList","map","flat","listen"],"sourceRoot":"C:\\Users\\quant\\Desktop\\ViteProject\\PROJECT\\backend\\","sources":["index.js"],"sourcesContent":["const port = 4000;\r\nconst express = require('express')\r\nconst app = express()\r\nconst mongoose = require(\"mongoose\")\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst path = require(\"path\")\r\nconst cors = require('cors');\r\nconst { v4: uuid } = require('uuid')\r\nconst cloudinary = require('cloudinary').v2;\r\nconst { CloudinaryStorage } = require('multer-storage-cloudinary');\r\nconst multer = require(\"multer\")\r\n\r\napp.use(express.json())\r\napp.use(cors())\r\n\r\n// Database connection with MongoDB\r\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\")\r\n\r\n// API creation\r\napp.get(\"/\", (req, res) => {\r\n    res.send(\"Express App is Running\")\r\n})\r\n\r\n// Cloudinary configuration\r\ncloudinary.config({ \r\n  cloud_name: 'defmx7amw', \r\n  api_key: '781925426129789', \r\n  api_secret: 'AQNuKUvEsvwB0i4bzf2mFxwUzwk' \r\n});\r\n\r\nconst storage = new CloudinaryStorage({\r\n  cloudinary: cloudinary,\r\n  folder: 'SHOPPER', // Đổi folder tùy theo yêu cầu của bạn\r\n  allowedFormats: ['jpg', 'png', 'jpeg'],\r\n})\r\n\r\nconst upload = multer({ storage: storage })\r\n\r\n// Endpoint for uploading images\r\napp.post('/upload', upload.single('product'), (req, res) => {\r\n  // console.log(\"req\", req.file)\r\n  const link_img = req.file.path // Đây là đường dẫn Cloudinary\r\n  res.json({\r\n    success: 1,\r\n    image_url: link_img\r\n  })\r\n})  \r\n\r\n// Static middleware path\r\n// Đường dẫn phải trỏ đến Cloudinary, không phải địa chỉ cục bộ\r\n// app.use('/images', express.static('https://res.cloudinary.com/defmx7amw/image/upload/upload'))\r\n\r\n// Schema for creating product\r\nconst Product = mongoose.model(\"Product\", {\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  image:{\r\n    type: String,\r\n    required: true,\r\n  },\r\n  category: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  new_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  old_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  date: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  available: { // Sửa thành \"available\"\r\n    type: Boolean,\r\n    default: true,\r\n  }\r\n})\r\n\r\napp.post('/addproduct', async (req, res) => {\r\n    let products = await Product.find({})\r\n    let id\r\n    if(products.length > 0) {\r\n        let last_product_array = products.slice(-1)\r\n        last_product = last_product_array[0]\r\n        id = last_product.id + 1;\r\n    }else{\r\n      id = 1\r\n    }\r\n        const product = new Product ({\r\n          id: id, // luôn bằng thằng cuối tăng lên 1\r\n          name: req.body.name,\r\n          image: req.body.image,\r\n          category: req.body.category,\r\n          new_price: req.body.new_price,\r\n          old_price: req.body.old_price,\r\n        })\r\n        await product.save()\r\n        console.log(\"Saved\")\r\n        res.json({\r\n          success: true,\r\n          name: req.body.name\r\n        })\r\n})\r\n\r\n// Creating API for deleting product\r\n\r\napp.post('/removeproduct', async (req, res) => {\r\n  await Product.findOneAndDelete({\r\n    id: req.body.id\r\n  })\r\n  res.json({\r\n    success: true,\r\n    name: req.body.name\r\n  })\r\n})\r\n// creating API for getting all products\r\napp.get('/allproduct', async (req, res) => {\r\n  try {\r\n    let start = parseInt(req.query.start) || 0; \r\n    let limit = parseInt(req.query.limit) || 12; \r\n    let category = req.query.category; \r\n    let query = {};\r\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\r\n    if (category) {\r\n      query.category = category;\r\n    }\r\n\r\n    let products;\r\n\r\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\r\n    if (!isNaN(start) && !isNaN(limit) && category) {\r\n      products = await Product.find(query).skip(start).limit(limit);\r\n    } else {\r\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\r\n      products = await Product.find({});\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: products\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, message: \"Internal server error\" });\r\n  }\r\n});\r\n\r\nconst Users = mongoose.model('Users' , {\r\n  name: {\r\n      type: String,\r\n      required: true\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  orderList: {\r\n      type: Array,\r\n  },\r\n  cartDetails: {\r\n    type: Array,\r\n    default: [],\r\n  },\r\n  data: {\r\n    type: Date,\r\n    default: Date.now,\r\n  }\r\n});\r\napp.post('/signup', async (req, res) => {\r\n    let check =  await Users.findOne({email: req.body.email})\r\n    if(check) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        errors: 'existing user found with same email'\r\n      }) \r\n    }\r\n    let cart = {};\r\n    for( let i = 0; i < 300 ; i++){\r\n      cart[i] = 0;\r\n    }\r\n    const user = new Users({\r\n        name: req.body.username,\r\n        email: req.body.email,\r\n        password: req.body.password,\r\n        orderList: [],\r\n        cartData: cart,\r\n    })\r\n    await user.save()\r\n    const data = {\r\n      user: {\r\n        id: user.id,\r\n        username: user.name,\r\n        email: user.email\r\n      }\r\n    }\r\n    const token = jwt.sign(data, 'secret_ecom')\r\n    res.json({ success: true, \r\n      token, \r\n      username: user.name, \r\n      email: user.email\r\n     }); // Sửa ở đây\r\n  }\r\n)\r\n\r\n//creating endpoint for user login \r\napp.post('/login', async (req, res) => {\r\n  let user = await Users.findOne({\r\n    email: req.body.email\r\n  });\r\n  \r\n  if (user) {\r\n    const passCompare = req.body.password === user.password;\r\n    if (passCompare) {\r\n      const data = {\r\n        user: {\r\n          id: user.id,\r\n          username: user.name,\r\n          email: user.email\r\n        }\r\n      };\r\n      const token = jwt.sign(data, 'secret_ecom');\r\n      res.json({ success: true, \r\n                    token, \r\n                    username: user.name, \r\n                    email: user.email }); // Sửa ở đây\r\n    } else {\r\n      res.json({ success: false, errors: 'Wrong Password' });\r\n    }\r\n  } else {\r\n    res.json({ success: false, errors: 'Wrong Email Id' });\r\n  }\r\n});\r\n\r\n// creating endpoint for newcollection data\r\napp.get('/popular', async (req, res) => {\r\n  try{\r\n    const limit = 4\r\n    const category = 'women'\r\n\r\n    const popularProducts = await Product.find({category}).limit(limit)\r\n\r\n    res.json({\r\n      success: true,\r\n      data: popularProducts\r\n    })\r\n  }catch (error) {\r\n    res.status(500).json({ success: false, message: \"Internal server error\" });\r\n  }\r\n})\r\n// creating endpoint for newcollection data\r\n// app.get('/newcollection', async (req, res) => {\r\n//   let products = await Product.find({})\r\n//   let newcollection = products.slices\r\n// })\r\n\r\n// creating middleware to fetch user\r\n\r\nconst fetchUser = async (req,res, next) => {\r\n    const token = req.header('auth-token')\r\n    // console.log(token)\r\n    if (!token) {\r\n        res.status(401).send({\r\n          errors: 'Please authenticate using valid token'\r\n        })\r\n    }\r\n      else\r\n      {\r\n          try{\r\n            const data = jwt.verify(token, 'secret_ecom')\r\n            req.user = data.user\r\n            next()\r\n          }catch(error){\r\n            res.status(401).send({errors: \"Please authenticate using valid token\"})\r\n            console.log(error)\r\n          }\r\n        }\r\n}\r\n\r\n// creating endpoint for adding product in cartData\r\n// app.post('/addtocart', fetchUser , async (req, res) => {\r\n//   // console.log('Added', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData && userData.cartData){\r\n//     userData.cartData[req.body.itemId] += 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Added\")\r\n//   }else{\r\n//     console.log('chưa có userData')\r\n//   }\r\n// })\r\napp.post('/addtocart', fetchUser , async (req, res) => {\r\n  // console.log(req.body.cartItem)\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\r\n    if (!userData.cartDetails) {\r\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\r\n    }\r\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\r\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (existingItemIndex !== -1) {\r\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\r\n      userData.cartDetails[existingItemIndex].quantity += 1;\r\n    } else {\r\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\r\n      userData.cartDetails.push({\r\n        ...req.body.cartItem,\r\n        quantity: 1\r\n      });\r\n    }\r\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n    await userData.save();\r\n\r\n    res.status(200).send(\"Item added to cart successfully\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\r\n//   console.log('Removed', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData.cartData[req.body.itemId] > 0) {\r\n//     userData.cartData[req.body.itemId] -= 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Removed\")\r\n//   }\r\n// })\r\n\r\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({ _id: userId });\r\n\r\n    if (!userData) {\r\n      return res.status(404).send(\"User not found\");\r\n    }\r\n\r\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\r\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\r\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      \r\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\r\n      userData.cartDetails[itemIndex].quantity -= 1;\r\n      \r\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n      await userData.save();\r\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      console.log('userData', userData)\r\n      \r\n      return res.status(200).send(\"Item quantity decremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"No items to decrement\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/incrementformcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    const userData = await Users.findOneAndUpdate(\r\n      { _id: userId, \"cartDetails.id\": itemId }, // Tìm người dùng với ID và itemId phù hợp\r\n      { $inc: { \"cartDetails.$.quantity\": 1 } }, // Tăng quantity của mục có itemId tương ứng\r\n      { new: true } // Trả về tài liệu đã cập nhật\r\n    );\r\n\r\n    if (userData) {\r\n      return res.status(200).send(\"Item quantity incremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"Item not found in cart\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\r\napp.post('/removefromcart', fetchUser , async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n\r\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\r\n    if (userData && userData.cartDetails) {\r\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n      if (existingItemIndex !== -1) {\r\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\r\n        await userData.save();\r\n        return res.status(200).send(\"Item removed from cart successfully\");\r\n      }\r\n    }\r\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\r\n    res.status(400).send(\"Item not found in cart\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n// app.post('/removefromcart', fetchUser , async (req, res) => {\r\n//   try {\r\n//     const userId = req.user.id;\r\n//     const itemId = req.body.itemId;\r\n\r\n//     let userData = await Users.findOne({_id: userId});\r\n\r\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\r\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\r\n//       userData.cartData[itemId] = 0;\r\n\r\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\r\n//       res.status(200).send(\"All items removed\");\r\n//     } else {\r\n//       res.status(400).send(\"No items to remove\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     res.status(500).send(\"Internal server error\");\r\n//   }\r\n// });\r\n\r\n// creating endpoint to get cartdata\r\n// creating endpoint to get cartdata\r\n\r\n// app.post('/getcart', fetchUser, async (req, res) => {\r\n//   try {\r\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\r\n//       const userId = req.user.id;\r\n//       // Tìm người dùng trong cơ sở dữ liệu\r\n//       const userData = await Users.findOne({ _id: userId });\r\n\r\n//       console.log('userData', userData)\r\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\r\n//       if (userData && userData.cartData) {\r\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\r\n//           res.json(userData.cartData);\r\n//       } else {\r\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\r\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\r\n//       }\r\n//   } catch (error) {\r\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\r\n//       console.error(error);\r\n//       res.status(500).json({ success: false, message: 'Internal server error' });\r\n//   }\r\n// });\r\n\r\n\r\n// creating endpoint for checkout cart\r\napp.post('/orderList', async (req, res) => {\r\n  try{\r\n    const order = req.body\r\n    const user = await Users.findOne({\r\n        email:  order.customerInfo.email\r\n    })\r\n    if(!user){\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: 'User not found'\r\n      })\r\n    }\r\n    const newOrder = { \r\n      orderId : order.orderId,\r\n      orderInfo : {\r\n        ...order.orderInfo,\r\n        orderDate: order.orderInfo.orderDate\r\n      },\r\n      orderDetails: order.orderDetails,\r\n      customerInfo : order.customerInfo\r\n    }\r\n\r\n    user.orderList.push(newOrder)\r\n\r\n    await user.save()\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Order successfully processed and saved'\r\n    })\r\n  }catch(error){\r\n    console.log(error)\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Internal server error'\r\n    })\r\n  }\r\n})\r\n// endpoint get all orderList\r\n\r\napp.get('/orderList', async (req, res) => {\r\n  try {\r\n    const users = await Users.find({}, 'orderList');\r\n    const allOrderList = users.map(user => user.orderList);\r\n\r\n    const orderList = allOrderList.flat()\r\n\r\n    res.status(200).json(orderList);\r\n  } catch (error) {\r\n    console.error('Error while fetching all cartDetails:', error);\r\n    res.status(500).json({ error: 'Internal server error' });\r\n  }\r\n});\r\n\r\n// const port = process.env.PORT || 4000 Sử dụng cổng do Render cung cấp hoặc 4000 nếu không có cổng nào được cung cấp\r\n\r\napp.listen(port, (error) => {\r\n  if (!error) {\r\n    console.log(\"Production: Server Running on port: \" + port);\r\n  } else {\r\n    console.log(\"Error:\" + error);\r\n  }\r\n});"],"mappings":"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"}},"mtime":1709711143540}}