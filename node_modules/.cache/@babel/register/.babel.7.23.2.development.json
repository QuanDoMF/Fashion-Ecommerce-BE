{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"filename\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\quant\\\\Desktop\\\\ViteProject\\\\PROJECT\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:development":{"value":{"code":"const port = 4000;\nconst express = require('express');\nconst app = express();\nconst mongoose = require(\"mongoose\");\nconst jwt = require(\"jsonwebtoken\");\nconst multer = require(\"multer\");\nconst path = require(\"path\");\nconst cors = require('cors');\nconst {\n  v4: uuid\n} = require('uuid');\napp.use(express.json());\napp.use(cors());\n\n// Database connection with MongoDB\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\");\n\n// API creation\napp.get(\"/\", (req, res) => {\n  res.send(\"Express App is Running\");\n});\nconst storage = multer.diskStorage({\n  destination: './upload/images',\n  filename: (req, file, cb) => {\n    return cb(null, `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`);\n  }\n});\nconst upload = multer({\n  storage: storage\n});\n\n//creating upload endpoint for images\n\napp.use('/images', express.static('upload/images'));\napp.post('/upload', upload.single('product'), (req, res) => {\n  console.log('req', req);\n  res.json({\n    success: 1,\n    image_url: `https://fashion-ecommerce-be.onrender.com/images/${req.file.filename}`\n  });\n});\n\n// schema for creating product\nconst Product = mongoose.model(\"Product\", {\n  id: {\n    type: Number,\n    required: true\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  image: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true\n  },\n  new_price: {\n    type: Number,\n    required: true\n  },\n  old_price: {\n    type: Number,\n    required: true\n  },\n  date: {\n    type: Date,\n    default: Date.now\n  },\n  avilabel: {\n    type: Boolean,\n    default: true\n  }\n});\napp.post('/addproduct', async (req, res) => {\n  let products = await Product.find({});\n  let id;\n  if (products.length > 0) {\n    let last_product_array = products.slice(-1);\n    last_product = last_product_array[0];\n    id = last_product.id + 1;\n  } else {\n    id = 1;\n  }\n  const product = new Product({\n    id: id,\n    // luôn bằng thằng cuối tăng lên 1\n    name: req.body.name,\n    image: req.body.image,\n    category: req.body.category,\n    new_price: req.body.new_price,\n    old_price: req.body.old_price\n  });\n  await product.save();\n  console.log(\"Saved\");\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n\n// Creating API for deleting product\n\napp.post('/removeproduct', async (req, res) => {\n  await Product.findOneAndDelete({\n    id: req.body.id\n  });\n  console.log(\"Removed\");\n  res.json({\n    success: true,\n    name: req.body.name\n  });\n});\n\n// creating API for getting all products\napp.get('/allproduct', async (req, res) => {\n  try {\n    let start = parseInt(req.query.start) || 0;\n    let limit = parseInt(req.query.limit) || 12;\n    let category = req.query.category;\n    let query = {};\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\n    if (category) {\n      query.category = category;\n    }\n    let products;\n\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\n    if (!isNaN(start) && !isNaN(limit) && category) {\n      products = await Product.find(query).skip(start).limit(limit);\n    } else {\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\n      products = await Product.find({});\n    }\n    res.json({\n      success: true,\n      data: products\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Internal server error\"\n    });\n  }\n});\nconst Users = mongoose.model('Users', {\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  orderList: {\n    type: Array\n  },\n  cartDetails: {\n    type: Array,\n    default: []\n  },\n  data: {\n    type: Date,\n    default: Date.now\n  }\n});\napp.post('/signup', async (req, res) => {\n  let check = await Users.findOne({\n    email: req.body.email\n  });\n  if (check) {\n    return res.status(400).json({\n      success: false,\n      errors: 'existing user found with same email'\n    });\n  }\n  let cart = {};\n  for (let i = 0; i < 300; i++) {\n    cart[i] = 0;\n  }\n  const user = new Users({\n    name: req.body.username,\n    email: req.body.email,\n    password: req.body.password,\n    orderList: [],\n    cartData: cart\n  });\n  await user.save();\n  const data = {\n    user: {\n      id: user.id,\n      username: user.name,\n      email: user.email\n    }\n  };\n  const token = jwt.sign(data, 'secret_ecom');\n  res.json({\n    success: true,\n    token,\n    username: user.name,\n    email: user.email\n  }); // Sửa ở đây\n});\n\n//creating endpoint for user login \napp.post('/login', async (req, res) => {\n  let user = await Users.findOne({\n    email: req.body.email\n  });\n  if (user) {\n    const passCompare = req.body.password === user.password;\n    if (passCompare) {\n      const data = {\n        user: {\n          id: user.id,\n          username: user.name,\n          email: user.email\n        }\n      };\n      const token = jwt.sign(data, 'secret_ecom');\n      res.json({\n        success: true,\n        token,\n        username: user.name,\n        email: user.email\n      }); // Sửa ở đây\n    } else {\n      res.json({\n        success: false,\n        errors: 'Wrong Password'\n      });\n    }\n  } else {\n    res.json({\n      success: false,\n      errors: 'Wrong Email Id'\n    });\n  }\n});\n\n// creating endpoint for newcollection data\napp.get('/newcollection', async (req, res) => {\n  let products = await Product.find({});\n  let newcollection = products.slices;\n});\n\n// creating middleware to fetch user\n\nconst fetchUser = async (req, res, next) => {\n  const token = req.header('auth-token');\n  // console.log(token)\n  if (!token) {\n    res.status(401).send({\n      errors: 'Please authenticate using valid token'\n    });\n  } else {\n    try {\n      const data = jwt.verify(token, 'secret_ecom');\n      req.user = data.user;\n      next();\n    } catch (error) {\n      res.status(401).send({\n        errors: \"Please authenticate using valid token\"\n      });\n      console.log(error);\n    }\n  }\n};\n\n// creating endpoint for adding product in cartData\n// app.post('/addtocart', fetchUser , async (req, res) => {\n//   // console.log('Added', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData && userData.cartData){\n//     userData.cartData[req.body.itemId] += 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Added\")\n//   }else{\n//     console.log('chưa có userData')\n//   }\n// })\napp.post('/addtocart', fetchUser, async (req, res) => {\n  // console.log(req.body.cartItem)\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\n    if (!userData.cartDetails) {\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\n    }\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (existingItemIndex !== -1) {\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\n      userData.cartDetails[existingItemIndex].quantity += 1;\n    } else {\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\n      userData.cartDetails.push({\n        ...req.body.cartItem,\n        quantity: 1\n      });\n    }\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n    await userData.save();\n    res.status(200).send(\"Item added to cart successfully\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\n//   console.log('Removed', req.body.itemId)\n//   let userData = await Users.findOne({_id: req.user.id})\n//   if(userData.cartData[req.body.itemId] > 0) {\n//     userData.cartData[req.body.itemId] -= 1\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\n//     res.send(\"Removed\")\n//   }\n// })\n\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n    if (!userData) {\n      return res.status(404).send(\"User not found\");\n    }\n\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\n\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\n      userData.cartDetails[itemIndex].quantity -= 1;\n\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\n      await userData.save();\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\n      console.log('userData', userData);\n      return res.status(200).send(\"Item quantity decremented successfully\");\n    } else {\n      return res.status(400).send(\"No items to decrement\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\napp.post('/incrementformcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    const userData = await Users.findOneAndUpdate({\n      _id: userId,\n      \"cartDetails.id\": itemId\n    },\n    // Tìm người dùng với ID và itemId phù hợp\n    {\n      $inc: {\n        \"cartDetails.$.quantity\": 1\n      }\n    },\n    // Tăng quantity của mục có itemId tương ứng\n    {\n      new: true\n    } // Trả về tài liệu đã cập nhật\n    );\n\n    if (userData) {\n      return res.status(200).send(\"Item quantity incremented successfully\");\n    } else {\n      return res.status(400).send(\"Item not found in cart\");\n    }\n  } catch (error) {\n    console.error(error);\n    return res.status(500).send(\"Internal server error\");\n  }\n});\n\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\napp.post('/removefromcart', fetchUser, async (req, res) => {\n  try {\n    const userId = req.user.id;\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\n    let userData = await Users.findOne({\n      _id: userId\n    });\n\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\n    if (userData && userData.cartDetails) {\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\n      if (existingItemIndex !== -1) {\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\n        await userData.save();\n        return res.status(200).send(\"Item removed from cart successfully\");\n      }\n    }\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\n    res.status(400).send(\"Item not found in cart\");\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});\n\n// app.post('/removefromcart', fetchUser , async (req, res) => {\n//   try {\n//     const userId = req.user.id;\n//     const itemId = req.body.itemId;\n\n//     let userData = await Users.findOne({_id: userId});\n\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\n//       userData.cartData[itemId] = 0;\n\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\n//       res.status(200).send(\"All items removed\");\n//     } else {\n//       res.status(400).send(\"No items to remove\");\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     res.status(500).send(\"Internal server error\");\n//   }\n// });\n\n// creating endpoint to get cartdata\n// creating endpoint to get cartdata\n\n// app.post('/getcart', fetchUser, async (req, res) => {\n//   try {\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\n//       const userId = req.user.id;\n//       // Tìm người dùng trong cơ sở dữ liệu\n//       const userData = await Users.findOne({ _id: userId });\n\n//       console.log('userData', userData)\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\n//       if (userData && userData.cartData) {\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\n//           res.json(userData.cartData);\n//       } else {\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\n//       }\n//   } catch (error) {\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\n//       console.error(error);\n//       res.status(500).json({ success: false, message: 'Internal server error' });\n//   }\n// });\n\n// creating endpoint for checkout cart\napp.post('/orderList', async (req, res) => {\n  try {\n    const order = req.body;\n    const user = await Users.findOne({\n      email: order.customerInfo.email\n    });\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        message: 'User not found'\n      });\n    }\n    const newOrder = {\n      orderId: order.orderId,\n      orderInfo: {\n        ...order.orderInfo,\n        orderDate: order.orderInfo.orderDate\n      },\n      orderDetails: order.orderDetails,\n      customerInfo: order.customerInfo\n    };\n    user.orderList.push(newOrder);\n    await user.save();\n    res.status(200).json({\n      success: true,\n      message: 'Order successfully processed and saved'\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal server error'\n    });\n  }\n});\n// endpoint get all orderList\n\napp.get('/orderList', async (req, res) => {\n  try {\n    const users = await Users.find({}, 'orderList');\n    const allOrderList = users.map(user => user.orderList);\n    const orderList = allOrderList.flat();\n    res.status(200).json(orderList);\n  } catch (error) {\n    console.error('Error while fetching all cartDetails:', error);\n    res.status(500).json({\n      error: 'Internal server error'\n    });\n  }\n});\napp.listen(port, error => {\n  if (!error) {\n    console.log(\"Server Running on port: \" + port);\n  } else {\n    console.log(\"Error:\" + error);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwb3J0IiwiZXhwcmVzcyIsInJlcXVpcmUiLCJhcHAiLCJtb25nb29zZSIsImp3dCIsIm11bHRlciIsInBhdGgiLCJjb3JzIiwidjQiLCJ1dWlkIiwidXNlIiwianNvbiIsImNvbm5lY3QiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJmaWxlbmFtZSIsImZpbGUiLCJjYiIsImZpZWxkbmFtZSIsIkRhdGUiLCJub3ciLCJleHRuYW1lIiwib3JpZ2luYWxuYW1lIiwidXBsb2FkIiwic3RhdGljIiwicG9zdCIsInNpbmdsZSIsImNvbnNvbGUiLCJsb2ciLCJzdWNjZXNzIiwiaW1hZ2VfdXJsIiwiUHJvZHVjdCIsIm1vZGVsIiwiaWQiLCJ0eXBlIiwiTnVtYmVyIiwicmVxdWlyZWQiLCJuYW1lIiwiU3RyaW5nIiwiaW1hZ2UiLCJjYXRlZ29yeSIsIm5ld19wcmljZSIsIm9sZF9wcmljZSIsImRhdGUiLCJkZWZhdWx0IiwiYXZpbGFiZWwiLCJCb29sZWFuIiwicHJvZHVjdHMiLCJmaW5kIiwibGVuZ3RoIiwibGFzdF9wcm9kdWN0X2FycmF5Iiwic2xpY2UiLCJsYXN0X3Byb2R1Y3QiLCJwcm9kdWN0IiwiYm9keSIsInNhdmUiLCJmaW5kT25lQW5kRGVsZXRlIiwic3RhcnQiLCJwYXJzZUludCIsInF1ZXJ5IiwibGltaXQiLCJpc05hTiIsInNraXAiLCJkYXRhIiwiZXJyb3IiLCJzdGF0dXMiLCJtZXNzYWdlIiwiVXNlcnMiLCJlbWFpbCIsInBhc3N3b3JkIiwib3JkZXJMaXN0IiwiQXJyYXkiLCJjYXJ0RGV0YWlscyIsImNoZWNrIiwiZmluZE9uZSIsImVycm9ycyIsImNhcnQiLCJpIiwidXNlciIsInVzZXJuYW1lIiwiY2FydERhdGEiLCJ0b2tlbiIsInNpZ24iLCJwYXNzQ29tcGFyZSIsIm5ld2NvbGxlY3Rpb24iLCJzbGljZXMiLCJmZXRjaFVzZXIiLCJuZXh0IiwiaGVhZGVyIiwidmVyaWZ5IiwidXNlcklkIiwiaXRlbUlkIiwiY2FydEl0ZW0iLCJ1c2VyRGF0YSIsIl9pZCIsImV4aXN0aW5nSXRlbUluZGV4IiwiZmluZEluZGV4IiwiaXRlbSIsInF1YW50aXR5IiwicHVzaCIsIml0ZW1JbmRleCIsImZpbmRPbmVBbmRVcGRhdGUiLCIkaW5jIiwibmV3Iiwic3BsaWNlIiwib3JkZXIiLCJjdXN0b21lckluZm8iLCJuZXdPcmRlciIsIm9yZGVySWQiLCJvcmRlckluZm8iLCJvcmRlckRhdGUiLCJvcmRlckRldGFpbHMiLCJ1c2VycyIsImFsbE9yZGVyTGlzdCIsIm1hcCIsImZsYXQiLCJsaXN0ZW4iXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccXVhbnRcXERlc2t0b3BcXFZpdGVQcm9qZWN0XFxQUk9KRUNUXFxiYWNrZW5kXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBwb3J0ID0gNDAwMDtcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKFwibW9uZ29vc2VcIilcclxuY29uc3Qgand0ID0gcmVxdWlyZShcImpzb253ZWJ0b2tlblwiKVxyXG5jb25zdCBtdWx0ZXIgPSByZXF1aXJlKFwibXVsdGVyXCIpXHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKFwicGF0aFwiKVxyXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xyXG5jb25zdCB7IHY0OiB1dWlkIH0gPSByZXF1aXJlKCd1dWlkJylcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSlcclxuYXBwLnVzZShjb3JzKCkpXHJcblxyXG4vLyBEYXRhYmFzZSBjb25uZWN0aW9uIHdpdGggTW9uZ29EQlxyXG5tb25nb29zZS5jb25uZWN0KFwibW9uZ29kYitzcnY6Ly90cXVhbmRvbzpRdWFuMjQwMUBjbHVzdGVyMC5vazJ4bW9lLm1vbmdvZGIubmV0L0Vjb21tZXJjZVwiKVxyXG5cclxuLy8gQVBJIGNyZWF0aW9uXHJcbmFwcC5nZXQoXCIvXCIsIChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnNlbmQoXCJFeHByZXNzIEFwcCBpcyBSdW5uaW5nXCIpXHJcbn0pXHJcblxyXG5jb25zdCBzdG9yYWdlID0gbXVsdGVyLmRpc2tTdG9yYWdlKHtcclxuICBkZXN0aW5hdGlvbjogJy4vdXBsb2FkL2ltYWdlcycsXHJcbiAgZmlsZW5hbWU6IChyZXEsIGZpbGUsIGNiKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGNiKG51bGwsIGAke2ZpbGUuZmllbGRuYW1lfV8ke0RhdGUubm93KCl9JHtwYXRoLmV4dG5hbWUoZmlsZS5vcmlnaW5hbG5hbWUpfWApXHJcbiAgfVxyXG59KVxyXG5jb25zdCB1cGxvYWQgPSBtdWx0ZXIoe3N0b3JhZ2U6IHN0b3JhZ2V9KVxyXG5cclxuLy9jcmVhdGluZyB1cGxvYWQgZW5kcG9pbnQgZm9yIGltYWdlc1xyXG5cclxuYXBwLnVzZSgnL2ltYWdlcycsZXhwcmVzcy5zdGF0aWMoJ3VwbG9hZC9pbWFnZXMnKSlcclxuXHJcbmFwcC5wb3N0KCcvdXBsb2FkJyx1cGxvYWQuc2luZ2xlKCdwcm9kdWN0JyksKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ3JlcScsIHJlcSlcclxuICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgc3VjY2VzczogMSxcclxuICAgICAgICAgIGltYWdlX3VybDogYGh0dHBzOi8vZmFzaGlvbi1lY29tbWVyY2UtYmUub25yZW5kZXIuY29tL2ltYWdlcy8ke3JlcS5maWxlLmZpbGVuYW1lfWBcclxuICAgICAgfSlcclxufSkgIFxyXG5cclxuLy8gc2NoZW1hIGZvciBjcmVhdGluZyBwcm9kdWN0XHJcbmNvbnN0IFByb2R1Y3QgPSBtb25nb29zZS5tb2RlbChcIlByb2R1Y3RcIiwge1xyXG4gIGlkOiB7XHJcbiAgICB0eXBlOiBOdW1iZXIsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG4gIG5hbWU6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gIH0sXHJcbiAgaW1hZ2U6e1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBjYXRlZ29yeToge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBuZXdfcHJpY2U6IHtcclxuICAgIHR5cGU6IE51bWJlcixcclxuICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgfSxcclxuICBvbGRfcHJpY2U6IHtcclxuICAgIHR5cGU6IE51bWJlcixcclxuICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgfSxcclxuICBkYXRlOiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgZGVmYXVsdDogRGF0ZS5ub3dcclxuICB9LFxyXG4gIGF2aWxhYmVsOiB7XHJcbiAgICB0eXBlOiBCb29sZWFuLFxyXG4gICAgZGVmYXVsdDogdHJ1ZSxcclxuICB9XHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL2FkZHByb2R1Y3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7fSlcclxuICAgIGxldCBpZFxyXG4gICAgaWYocHJvZHVjdHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGxldCBsYXN0X3Byb2R1Y3RfYXJyYXkgPSBwcm9kdWN0cy5zbGljZSgtMSlcclxuICAgICAgICBsYXN0X3Byb2R1Y3QgPSBsYXN0X3Byb2R1Y3RfYXJyYXlbMF1cclxuICAgICAgICBpZCA9IGxhc3RfcHJvZHVjdC5pZCArIDE7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgaWQgPSAxXHJcbiAgICB9XHJcbiAgICAgICAgY29uc3QgcHJvZHVjdCA9IG5ldyBQcm9kdWN0ICh7XHJcbiAgICAgICAgICBpZDogaWQsIC8vIGx1w7RuIGLhurFuZyB0aOG6sW5nIGN14buRaSB0xINuZyBsw6puIDFcclxuICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWUsXHJcbiAgICAgICAgICBpbWFnZTogcmVxLmJvZHkuaW1hZ2UsXHJcbiAgICAgICAgICBjYXRlZ29yeTogcmVxLmJvZHkuY2F0ZWdvcnksXHJcbiAgICAgICAgICBuZXdfcHJpY2U6IHJlcS5ib2R5Lm5ld19wcmljZSxcclxuICAgICAgICAgIG9sZF9wcmljZTogcmVxLmJvZHkub2xkX3ByaWNlLFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgYXdhaXQgcHJvZHVjdC5zYXZlKClcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlNhdmVkXCIpXHJcbiAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgIG5hbWU6IHJlcS5ib2R5Lm5hbWVcclxuICAgICAgICB9KVxyXG59KVxyXG5cclxuLy8gQ3JlYXRpbmcgQVBJIGZvciBkZWxldGluZyBwcm9kdWN0XHJcblxyXG5hcHAucG9zdCgnL3JlbW92ZXByb2R1Y3QnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICBhd2FpdCBQcm9kdWN0LmZpbmRPbmVBbmREZWxldGUoe1xyXG4gICAgaWQ6IHJlcS5ib2R5LmlkXHJcbiAgfSlcclxuICBjb25zb2xlLmxvZyhcIlJlbW92ZWRcIilcclxuICByZXMuanNvbih7XHJcbiAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgbmFtZTogcmVxLmJvZHkubmFtZVxyXG4gIH0pXHJcbn0pXHJcblxyXG4vLyBjcmVhdGluZyBBUEkgZm9yIGdldHRpbmcgYWxsIHByb2R1Y3RzXHJcbmFwcC5nZXQoJy9hbGxwcm9kdWN0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGxldCBzdGFydCA9IHBhcnNlSW50KHJlcS5xdWVyeS5zdGFydCkgfHwgMDsgXHJcbiAgICBsZXQgbGltaXQgPSBwYXJzZUludChyZXEucXVlcnkubGltaXQpIHx8IDEyOyBcclxuICAgIGxldCBjYXRlZ29yeSA9IHJlcS5xdWVyeS5jYXRlZ29yeTsgXHJcbiAgICBsZXQgcXVlcnkgPSB7fTtcclxuICAgIC8vIE7hur91IGNhdGVnb3J5IMSRxrDhu6NjIGNo4buJIMSR4buLbmgsIHRow6ptIG7DsyB2w6BvIMSRaeG7gXUga2nhu4duIHRydXkgduG6pW5cclxuICAgIGlmIChjYXRlZ29yeSkge1xyXG4gICAgICBxdWVyeS5jYXRlZ29yeSA9IGNhdGVnb3J5O1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBwcm9kdWN0cztcclxuXHJcbiAgICAvLyBO4bq/dSBj4bqjIHN0YXJ0LCBsaW1pdCB2w6AgY2F0ZWdvcnkgxJHhu4F1IMSRxrDhu6NjIGNo4buJIMSR4buLbmgsIHRo4buxYyBoaeG7h24gbOG6pXkgc+G6o24gcGjhuqltIHRoZW8gY8OhYyDEkWnhu4F1IGtp4buHbiBuw6B5XHJcbiAgICBpZiAoIWlzTmFOKHN0YXJ0KSAmJiAhaXNOYU4obGltaXQpICYmIGNhdGVnb3J5KSB7XHJcbiAgICAgIHByb2R1Y3RzID0gYXdhaXQgUHJvZHVjdC5maW5kKHF1ZXJ5KS5za2lwKHN0YXJ0KS5saW1pdChsaW1pdCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBO4bq/dSBraMO0bmcgY8OzIGPhuqMgc3RhcnQsIGxpbWl0IGhv4bq3YyBjYXRlZ29yeSwgaG/hurdjIHRoaeG6v3UgYuG6pXQga+G7syB0aGFtIHPhu5EgbsOgbywgbOG6pXkgdOG6pXQgY+G6oyBz4bqjbiBwaOG6qW1cclxuICAgICAgcHJvZHVjdHMgPSBhd2FpdCBQcm9kdWN0LmZpbmQoe30pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlcy5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgZGF0YTogcHJvZHVjdHNcclxuICAgIH0pO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBcIkludGVybmFsIHNlcnZlciBlcnJvclwiIH0pO1xyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBVc2VycyA9IG1vbmdvb3NlLm1vZGVsKCdVc2VycycgLCB7XHJcbiAgbmFtZToge1xyXG4gICAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAgfSxcclxuICBlbWFpbDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWVcclxuICB9LFxyXG4gIHBhc3N3b3JkOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZVxyXG4gIH0sXHJcbiAgb3JkZXJMaXN0OiB7XHJcbiAgICAgIHR5cGU6IEFycmF5LFxyXG4gIH0sXHJcbiAgY2FydERldGFpbHM6IHtcclxuICAgIHR5cGU6IEFycmF5LFxyXG4gICAgZGVmYXVsdDogW10sXHJcbiAgfSxcclxuICBkYXRhOiB7XHJcbiAgICB0eXBlOiBEYXRlLFxyXG4gICAgZGVmYXVsdDogRGF0ZS5ub3csXHJcbiAgfVxyXG59KTtcclxuYXBwLnBvc3QoJy9zaWdudXAnLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBjaGVjayA9ICBhd2FpdCBVc2Vycy5maW5kT25lKHtlbWFpbDogcmVxLmJvZHkuZW1haWx9KVxyXG4gICAgaWYoY2hlY2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcclxuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICBlcnJvcnM6ICdleGlzdGluZyB1c2VyIGZvdW5kIHdpdGggc2FtZSBlbWFpbCdcclxuICAgICAgfSkgXHJcbiAgICB9XHJcbiAgICBsZXQgY2FydCA9IHt9O1xyXG4gICAgZm9yKCBsZXQgaSA9IDA7IGkgPCAzMDAgOyBpKyspe1xyXG4gICAgICBjYXJ0W2ldID0gMDtcclxuICAgIH1cclxuICAgIGNvbnN0IHVzZXIgPSBuZXcgVXNlcnMoe1xyXG4gICAgICAgIG5hbWU6IHJlcS5ib2R5LnVzZXJuYW1lLFxyXG4gICAgICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbCxcclxuICAgICAgICBwYXNzd29yZDogcmVxLmJvZHkucGFzc3dvcmQsXHJcbiAgICAgICAgb3JkZXJMaXN0OiBbXSxcclxuICAgICAgICBjYXJ0RGF0YTogY2FydCxcclxuICAgIH0pXHJcbiAgICBhd2FpdCB1c2VyLnNhdmUoKVxyXG4gICAgY29uc3QgZGF0YSA9IHtcclxuICAgICAgdXNlcjoge1xyXG4gICAgICAgIGlkOiB1c2VyLmlkLFxyXG4gICAgICAgIHVzZXJuYW1lOiB1c2VyLm5hbWUsXHJcbiAgICAgICAgZW1haWw6IHVzZXIuZW1haWxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbihkYXRhLCAnc2VjcmV0X2Vjb20nKVxyXG4gICAgcmVzLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBcclxuICAgICAgdG9rZW4sIFxyXG4gICAgICB1c2VybmFtZTogdXNlci5uYW1lLCBcclxuICAgICAgZW1haWw6IHVzZXIuZW1haWxcclxuICAgICB9KTsgLy8gU+G7rWEg4bufIMSRw6J5XHJcbiAgfVxyXG4pXHJcblxyXG4vL2NyZWF0aW5nIGVuZHBvaW50IGZvciB1c2VyIGxvZ2luIFxyXG5hcHAucG9zdCgnL2xvZ2luJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgbGV0IHVzZXIgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtcclxuICAgIGVtYWlsOiByZXEuYm9keS5lbWFpbFxyXG4gIH0pO1xyXG4gIFxyXG4gIGlmICh1c2VyKSB7XHJcbiAgICBjb25zdCBwYXNzQ29tcGFyZSA9IHJlcS5ib2R5LnBhc3N3b3JkID09PSB1c2VyLnBhc3N3b3JkO1xyXG4gICAgaWYgKHBhc3NDb21wYXJlKSB7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgICAgdXNlcjoge1xyXG4gICAgICAgICAgaWQ6IHVzZXIuaWQsXHJcbiAgICAgICAgICB1c2VybmFtZTogdXNlci5uYW1lLFxyXG4gICAgICAgICAgZW1haWw6IHVzZXIuZW1haWxcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oZGF0YSwgJ3NlY3JldF9lY29tJyk7XHJcbiAgICAgIHJlcy5qc29uKHsgc3VjY2VzczogdHJ1ZSwgXHJcbiAgICAgICAgICAgICAgICAgICAgdG9rZW4sIFxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyLm5hbWUsIFxyXG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsIH0pOyAvLyBT4butYSDhu58gxJHDonlcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlcy5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yczogJ1dyb25nIFBhc3N3b3JkJyB9KTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgcmVzLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3JzOiAnV3JvbmcgRW1haWwgSWQnIH0pO1xyXG4gIH1cclxufSk7XHJcblxyXG4vLyBjcmVhdGluZyBlbmRwb2ludCBmb3IgbmV3Y29sbGVjdGlvbiBkYXRhXHJcbmFwcC5nZXQoJy9uZXdjb2xsZWN0aW9uJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgbGV0IHByb2R1Y3RzID0gYXdhaXQgUHJvZHVjdC5maW5kKHt9KVxyXG4gIGxldCBuZXdjb2xsZWN0aW9uID0gcHJvZHVjdHMuc2xpY2VzXHJcbn0pXHJcblxyXG4vLyBjcmVhdGluZyBtaWRkbGV3YXJlIHRvIGZldGNoIHVzZXJcclxuXHJcbmNvbnN0IGZldGNoVXNlciA9IGFzeW5jIChyZXEscmVzLCBuZXh0KSA9PiB7XHJcbiAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXIoJ2F1dGgtdG9rZW4nKVxyXG4gICAgLy8gY29uc29sZS5sb2codG9rZW4pXHJcbiAgICBpZiAoIXRva2VuKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoe1xyXG4gICAgICAgICAgZXJyb3JzOiAnUGxlYXNlIGF1dGhlbnRpY2F0ZSB1c2luZyB2YWxpZCB0b2tlbidcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgICBlbHNlXHJcbiAgICAgIHtcclxuICAgICAgICAgIHRyeXtcclxuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGp3dC52ZXJpZnkodG9rZW4sICdzZWNyZXRfZWNvbScpXHJcbiAgICAgICAgICAgIHJlcS51c2VyID0gZGF0YS51c2VyXHJcbiAgICAgICAgICAgIG5leHQoKVxyXG4gICAgICAgICAgfWNhdGNoKGVycm9yKXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLnNlbmQoe2Vycm9yczogXCJQbGVhc2UgYXV0aGVudGljYXRlIHVzaW5nIHZhbGlkIHRva2VuXCJ9KVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbn1cclxuXHJcbi8vIGNyZWF0aW5nIGVuZHBvaW50IGZvciBhZGRpbmcgcHJvZHVjdCBpbiBjYXJ0RGF0YVxyXG4vLyBhcHAucG9zdCgnL2FkZHRvY2FydCcsIGZldGNoVXNlciAsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIC8vIGNvbnNvbGUubG9nKCdBZGRlZCcsIHJlcS5ib2R5Lml0ZW1JZClcclxuLy8gICBsZXQgdXNlckRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtfaWQ6IHJlcS51c2VyLmlkfSlcclxuLy8gICBpZih1c2VyRGF0YSAmJiB1c2VyRGF0YS5jYXJ0RGF0YSl7XHJcbi8vICAgICB1c2VyRGF0YS5jYXJ0RGF0YVtyZXEuYm9keS5pdGVtSWRdICs9IDFcclxuLy8gICAgIGF3YWl0IFVzZXJzLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogcmVxLnVzZXIuaWR9LHtjYXJ0RGF0YTogdXNlckRhdGEuY2FydERhdGF9KVxyXG4vLyAgICAgcmVzLnNlbmQoXCJBZGRlZFwiKVxyXG4vLyAgIH1lbHNle1xyXG4vLyAgICAgY29uc29sZS5sb2coJ2NoxrBhIGPDsyB1c2VyRGF0YScpXHJcbi8vICAgfVxyXG4vLyB9KVxyXG5hcHAucG9zdCgnL2FkZHRvY2FydCcsIGZldGNoVXNlciAsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIC8vIGNvbnNvbGUubG9nKHJlcS5ib2R5LmNhcnRJdGVtKVxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcclxuICAgIGNvbnN0IGl0ZW1JZCA9IHJlcS5ib2R5LmNhcnRJdGVtLmlkOyAvLyBM4bqleSBpZCBj4bunYSBz4bqjbiBwaOG6qW0gdOG7qyByZXF1ZXN0IGJvZHlcclxuICAgIGxldCB1c2VyRGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe19pZDogdXNlcklkfSk7XHJcbiAgICAvLyBLaeG7g20gdHJhIHhlbSBuZ8aw4budaSBkw7luZyDEkcOjIGPDsyBnaeG7jyBow6BuZyBoYXkgY2jGsGFcclxuICAgIGlmICghdXNlckRhdGEuY2FydERldGFpbHMpIHtcclxuICAgICAgdXNlckRhdGEuY2FydERldGFpbHMgPSBbXTsgLy8gTuG6v3UgY2jGsGEsIGto4bufaSB04bqhbyBnaeG7jyBow6BuZyBjaG8gbmfGsOG7nWkgZMO5bmdcclxuICAgIH1cclxuICAgIC8vIFTDrG0geGVtIHPhuqNuIHBo4bqpbSDEkcOjIHThu5NuIHThuqFpIHRyb25nIGdp4buPIGjDoG5nIGPhu6dhIG5nxrDhu51pIGTDuW5nIGNoxrBhXHJcbiAgICBjb25zdCBleGlzdGluZ0l0ZW1JbmRleCA9IHVzZXJEYXRhLmNhcnREZXRhaWxzLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT09IGl0ZW1JZCk7XHJcbiAgICBpZiAoZXhpc3RpbmdJdGVtSW5kZXggIT09IC0xKSB7XHJcbiAgICAgIC8vIE7hur91IHPhuqNuIHBo4bqpbSDEkcOjIHThu5NuIHThuqFpIHRyb25nIGdp4buPIGjDoG5nLCB0xINuZyBz4buRIGzGsOG7o25nIGzDqm4gMVxyXG4gICAgICB1c2VyRGF0YS5jYXJ0RGV0YWlsc1tleGlzdGluZ0l0ZW1JbmRleF0ucXVhbnRpdHkgKz0gMTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIE7hur91IHPhuqNuIHBo4bqpbSBjaMawYSB04buTbiB04bqhaSB0cm9uZyBnaeG7jyBow6BuZywgdGjDqm0gc+G6o24gcGjhuqltIHbDoG8gZ2nhu48gaMOgbmcgduG7m2kgc+G7kSBsxrDhu6NuZyBsw6AgMVxyXG4gICAgICB1c2VyRGF0YS5jYXJ0RGV0YWlscy5wdXNoKHtcclxuICAgICAgICAuLi5yZXEuYm9keS5jYXJ0SXRlbSxcclxuICAgICAgICBxdWFudGl0eTogMVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIC8vIEzGsHUgY+G6rXAgbmjhuq10IGdp4buPIGjDoG5nIHbDoG8gY8ahIHPhu58gZOG7ryBsaeG7h3VcclxuICAgIGF3YWl0IHVzZXJEYXRhLnNhdmUoKTtcclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChcIkl0ZW0gYWRkZWQgdG8gY2FydCBzdWNjZXNzZnVsbHlcIik7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIik7XHJcbiAgfVxyXG59KTtcclxuXHJcbi8vIGFwcC5wb3N0KCcvZGVzY3JlbWVudGZyb21jYXJ0JywgZmV0Y2hVc2VyICwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgY29uc29sZS5sb2coJ1JlbW92ZWQnLCByZXEuYm9keS5pdGVtSWQpXHJcbi8vICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7X2lkOiByZXEudXNlci5pZH0pXHJcbi8vICAgaWYodXNlckRhdGEuY2FydERhdGFbcmVxLmJvZHkuaXRlbUlkXSA+IDApIHtcclxuLy8gICAgIHVzZXJEYXRhLmNhcnREYXRhW3JlcS5ib2R5Lml0ZW1JZF0gLT0gMVxyXG4vLyAgICAgYXdhaXQgVXNlcnMuZmluZE9uZUFuZFVwZGF0ZSh7X2lkOiByZXEudXNlci5pZH0se2NhcnREYXRhOiB1c2VyRGF0YS5jYXJ0RGF0YX0pXHJcbi8vICAgICByZXMuc2VuZChcIlJlbW92ZWRcIilcclxuLy8gICB9XHJcbi8vIH0pXHJcblxyXG4vLyBFbmRwb2ludCDEkeG7gyBnaeG6o20gc+G7kSBsxrDhu6NuZyBj4bunYSBt4buZdCBz4bqjbiBwaOG6qW0gdHJvbmcgZ2nhu48gaMOgbmdcclxuYXBwLnBvc3QoJy9kZXNjcmVtZW50ZnJvbWNhcnQnLCBmZXRjaFVzZXIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcclxuICAgIGNvbnN0IGl0ZW1JZCA9IHJlcS5ib2R5Lml0ZW1JZDsgLy8gTOG6pXkgaWQgY+G7p2Egc+G6o24gcGjhuqltIHThu6sgcmVxdWVzdCBib2R5XHJcbiAgICBsZXQgdXNlckRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHsgX2lkOiB1c2VySWQgfSk7XHJcblxyXG4gICAgaWYgKCF1c2VyRGF0YSkge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLnNlbmQoXCJVc2VyIG5vdCBmb3VuZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBUw6xtIGNo4buJIG3hu6VjIGPhu6dhIHPhuqNuIHBo4bqpbSB0cm9uZyBnaeG7jyBow6BuZyBj4bunYSBuZ8aw4budaSBkw7luZ1xyXG4gICAgY29uc3QgaXRlbUluZGV4ID0gdXNlckRhdGEuY2FydERldGFpbHMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gaXRlbUlkKTtcclxuICAgIGlmIChpdGVtSW5kZXggIT09IC0xICYmIHVzZXJEYXRhLmNhcnREZXRhaWxzW2l0ZW1JbmRleF0gJiYgdXNlckRhdGEuY2FydERldGFpbHNbaXRlbUluZGV4XS5xdWFudGl0eSA+IDApIHtcclxuICAgICAgY29uc29sZS5sb2coXCJxdWFudGl0eSBiZWZvcmUgZGVjcmVtZW50OlwiLCB1c2VyRGF0YS5jYXJ0RGV0YWlsc1tpdGVtSW5kZXhdLnF1YW50aXR5KTtcclxuICAgICAgXHJcbiAgICAgIC8vIE7hur91IHPhuqNuIHBo4bqpbSB04buTbiB04bqhaSB0cm9uZyBnaeG7jyBow6BuZyB2w6AgY8OzIHPhu5EgbMaw4bujbmcgbOG7m24gaMahbiAwLCBnaeG6o20gc+G7kSBsxrDhu6NuZyDEkWkgMVxyXG4gICAgICB1c2VyRGF0YS5jYXJ0RGV0YWlsc1tpdGVtSW5kZXhdLnF1YW50aXR5IC09IDE7XHJcbiAgICAgIFxyXG4gICAgICAvLyBMxrB1IGPhuq1wIG5o4bqtdCBnaeG7jyBow6BuZyB2w6BvIGPGoSBz4bufIGThu68gbGnhu4d1XHJcbiAgICAgIGF3YWl0IHVzZXJEYXRhLnNhdmUoKTtcclxuICAgICAgY29uc29sZS5sb2coXCJxdWFudGl0eSBhZnRlciBkZWNyZW1lbnQ6XCIsIHVzZXJEYXRhLmNhcnREZXRhaWxzW2l0ZW1JbmRleF0ucXVhbnRpdHkpO1xyXG4gICAgICBjb25zb2xlLmxvZygndXNlckRhdGEnLCB1c2VyRGF0YSlcclxuICAgICAgXHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuc2VuZChcIkl0ZW0gcXVhbnRpdHkgZGVjcmVtZW50ZWQgc3VjY2Vzc2Z1bGx5XCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKFwiTm8gaXRlbXMgdG8gZGVjcmVtZW50XCIpO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuc2VuZChcIkludGVybmFsIHNlcnZlciBlcnJvclwiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuXHJcblxyXG5cclxuLy8gRW5kcG9pbnQgxJHhu4MgdMSDbmcgc+G7kSBsxrDhu6NuZyBj4bunYSBt4buZdCBz4bqjbiBwaOG6qW0gdHJvbmcgZ2nhu48gaMOgbmdcclxuYXBwLnBvc3QoJy9pbmNyZW1lbnRmb3JtY2FydCcsIGZldGNoVXNlciwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVzZXJJZCA9IHJlcS51c2VyLmlkO1xyXG4gICAgY29uc3QgaXRlbUlkID0gcmVxLmJvZHkuaXRlbUlkOyAvLyBM4bqleSBpZCBj4bunYSBz4bqjbiBwaOG6qW0gdOG7qyByZXF1ZXN0IGJvZHlcclxuICAgIGNvbnN0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZUFuZFVwZGF0ZShcclxuICAgICAgeyBfaWQ6IHVzZXJJZCwgXCJjYXJ0RGV0YWlscy5pZFwiOiBpdGVtSWQgfSwgLy8gVMOsbSBuZ8aw4budaSBkw7luZyB24bubaSBJRCB2w6AgaXRlbUlkIHBow7kgaOG7o3BcclxuICAgICAgeyAkaW5jOiB7IFwiY2FydERldGFpbHMuJC5xdWFudGl0eVwiOiAxIH0gfSwgLy8gVMSDbmcgcXVhbnRpdHkgY+G7p2EgbeG7pWMgY8OzIGl0ZW1JZCB0xrDGoW5nIOG7qW5nXHJcbiAgICAgIHsgbmV3OiB0cnVlIH0gLy8gVHLhuqMgduG7gSB0w6BpIGxp4buHdSDEkcOjIGPhuq1wIG5o4bqtdFxyXG4gICAgKTtcclxuXHJcbiAgICBpZiAodXNlckRhdGEpIHtcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5zZW5kKFwiSXRlbSBxdWFudGl0eSBpbmNyZW1lbnRlZCBzdWNjZXNzZnVsbHlcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJJdGVtIG5vdCBmb3VuZCBpbiBjYXJ0XCIpO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuc2VuZChcIkludGVybmFsIHNlcnZlciBlcnJvclwiKTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy8gRW5kcG9pbnQgxJHhu4MgeMOzYSBt4buZdCBz4bqjbiBwaOG6qW0ga2jhu49pIGdp4buPIGjDoG5nXHJcbmFwcC5wb3N0KCcvcmVtb3ZlZnJvbWNhcnQnLCBmZXRjaFVzZXIgLCBhc3luYyAocmVxLCByZXMpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlcklkID0gcmVxLnVzZXIuaWQ7XHJcbiAgICBjb25zdCBpdGVtSWQgPSByZXEuYm9keS5pdGVtSWQ7IC8vIEzhuqV5IGlkIGPhu6dhIHPhuqNuIHBo4bqpbSB04burIHJlcXVlc3QgYm9keVxyXG4gICAgbGV0IHVzZXJEYXRhID0gYXdhaXQgVXNlcnMuZmluZE9uZSh7X2lkOiB1c2VySWR9KTtcclxuXHJcbiAgICAvLyBLaeG7g20gdHJhIHhlbSBuZ8aw4budaSBkw7luZyBjw7MgZ2nhu48gaMOgbmcgaGF5IGtow7RuZyB2w6AgZ2nhu48gaMOgbmcgY8OzIHPhuqNuIHBo4bqpbSDEkcOzIGtow7RuZ1xyXG4gICAgaWYgKHVzZXJEYXRhICYmIHVzZXJEYXRhLmNhcnREZXRhaWxzKSB7XHJcbiAgICAgIGNvbnN0IGV4aXN0aW5nSXRlbUluZGV4ID0gdXNlckRhdGEuY2FydERldGFpbHMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PT0gaXRlbUlkKTtcclxuICAgICAgaWYgKGV4aXN0aW5nSXRlbUluZGV4ICE9PSAtMSkge1xyXG4gICAgICAgIHVzZXJEYXRhLmNhcnREZXRhaWxzLnNwbGljZShleGlzdGluZ0l0ZW1JbmRleCwgMSk7IC8vIFjDs2Egc+G6o24gcGjhuqltIGto4buPaSBnaeG7jyBow6BuZ1xyXG4gICAgICAgIGF3YWl0IHVzZXJEYXRhLnNhdmUoKTtcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLnNlbmQoXCJJdGVtIHJlbW92ZWQgZnJvbSBjYXJ0IHN1Y2Nlc3NmdWxseVwiKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gTuG6v3Uga2jDtG5nIHTDrG0gdGjhuqV5IHPhuqNuIHBo4bqpbSwgdHLhuqMgduG7gSB0aMO0bmcgYsOhbyBs4buXaVxyXG4gICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJJdGVtIG5vdCBmb3VuZCBpbiBjYXJ0XCIpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKFwiSW50ZXJuYWwgc2VydmVyIGVycm9yXCIpO1xyXG4gIH1cclxufSk7XHJcblxyXG5cclxuLy8gYXBwLnBvc3QoJy9yZW1vdmVmcm9tY2FydCcsIGZldGNoVXNlciAsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIHRyeSB7XHJcbi8vICAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcclxuLy8gICAgIGNvbnN0IGl0ZW1JZCA9IHJlcS5ib2R5Lml0ZW1JZDtcclxuXHJcbi8vICAgICBsZXQgdXNlckRhdGEgPSBhd2FpdCBVc2Vycy5maW5kT25lKHtfaWQ6IHVzZXJJZH0pO1xyXG5cclxuLy8gICAgIGlmKHVzZXJEYXRhICYmIHVzZXJEYXRhLmNhcnREYXRhICYmIHVzZXJEYXRhLmNhcnREYXRhW2l0ZW1JZF0gPiAwKSB7XHJcbi8vICAgICAgIC8vIFjDs2EgaOG6v3Qgc+G7kSBsxrDhu6NuZyBz4bqjbiBwaOG6qW0gdHJvbmcgZ2nhu48gaMOgbmcgY2hvIGl0ZW1JZFxyXG4vLyAgICAgICB1c2VyRGF0YS5jYXJ0RGF0YVtpdGVtSWRdID0gMDtcclxuXHJcbi8vICAgICAgIGF3YWl0IFVzZXJzLmZpbmRPbmVBbmRVcGRhdGUoe19pZDogdXNlcklkfSwge2NhcnREYXRhOiB1c2VyRGF0YS5jYXJ0RGF0YX0pO1xyXG4vLyAgICAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChcIkFsbCBpdGVtcyByZW1vdmVkXCIpO1xyXG4vLyAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgcmVzLnN0YXR1cyg0MDApLnNlbmQoXCJObyBpdGVtcyB0byByZW1vdmVcIik7XHJcbi8vICAgICB9XHJcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4vLyAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoXCJJbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcIik7XHJcbi8vICAgfVxyXG4vLyB9KTtcclxuXHJcbi8vIGNyZWF0aW5nIGVuZHBvaW50IHRvIGdldCBjYXJ0ZGF0YVxyXG4vLyBjcmVhdGluZyBlbmRwb2ludCB0byBnZXQgY2FydGRhdGFcclxuXHJcbi8vIGFwcC5wb3N0KCcvZ2V0Y2FydCcsIGZldGNoVXNlciwgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbi8vICAgdHJ5IHtcclxuLy8gICAgICAgLy8gVHJ1eSB4deG6pXQgZOG7ryBsaeG7h3UgbmfGsOG7nWkgZMO5bmcgdOG7qyBtaWRkbGV3YXJlIGZldGNoVXNlclxyXG4vLyAgICAgICBjb25zdCB1c2VySWQgPSByZXEudXNlci5pZDtcclxuLy8gICAgICAgLy8gVMOsbSBuZ8aw4budaSBkw7luZyB0cm9uZyBjxqEgc+G7nyBk4buvIGxp4buHdVxyXG4vLyAgICAgICBjb25zdCB1c2VyRGF0YSA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoeyBfaWQ6IHVzZXJJZCB9KTtcclxuXHJcbi8vICAgICAgIGNvbnNvbGUubG9nKCd1c2VyRGF0YScsIHVzZXJEYXRhKVxyXG4vLyAgICAgICAvLyBLaeG7g20gdHJhIHhlbSBk4buvIGxp4buHdSBuZ8aw4budaSBkw7luZyB2w6AgZ2nhu48gaMOgbmcgY8OzIHThu5NuIHThuqFpIGtow7RuZ1xyXG4vLyAgICAgICBpZiAodXNlckRhdGEgJiYgdXNlckRhdGEuY2FydERhdGEpIHtcclxuLy8gICAgICAgICAgIC8vIE7hur91IHThu5NuIHThuqFpLCB0cuG6oyB24buBIGThu68gbGnhu4d1IGdp4buPIGjDoG5nIGTGsOG7m2kgZOG6oW5nIEpTT05cclxuLy8gICAgICAgICAgIHJlcy5qc29uKHVzZXJEYXRhLmNhcnREYXRhKTtcclxuLy8gICAgICAgfSBlbHNlIHtcclxuLy8gICAgICAgICAgIC8vIE7hur91IGtow7RuZyB0w6xtIHRo4bqleSBk4buvIGxp4buHdSBuZ8aw4budaSBkw7luZyBob+G6t2MgZ2nhu48gaMOgbmcsIHRy4bqjIHbhu4EgdGjDtG5nIGLDoW8gbOG7l2lcclxuLy8gICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdVc2VyIG9yIGNhcnQgZGF0YSBub3QgZm91bmQnIH0pO1xyXG4vLyAgICAgICB9XHJcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgLy8gWOG7rSBsw70gbOG7l2kgbuG6v3UgY8OzIGLhuqV0IGvhu7MgbOG7l2kgbsOgbyB44bqjeSByYSB0cm9uZyBxdcOhIHRyw6xuaCB44butIGzDvSB5w6p1IGPhuqd1XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4vLyAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcclxuLy8gICB9XHJcbi8vIH0pO1xyXG5cclxuXHJcbi8vIGNyZWF0aW5nIGVuZHBvaW50IGZvciBjaGVja291dCBjYXJ0XHJcbmFwcC5wb3N0KCcvb3JkZXJMaXN0JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XHJcbiAgdHJ5e1xyXG4gICAgY29uc3Qgb3JkZXIgPSByZXEuYm9keVxyXG4gICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXJzLmZpbmRPbmUoe1xyXG4gICAgICAgIGVtYWlsOiAgb3JkZXIuY3VzdG9tZXJJbmZvLmVtYWlsXHJcbiAgICB9KVxyXG4gICAgaWYoIXVzZXIpe1xyXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdVc2VyIG5vdCBmb3VuZCdcclxuICAgICAgfSlcclxuICAgIH1cclxuICAgIGNvbnN0IG5ld09yZGVyID0geyBcclxuICAgICAgb3JkZXJJZCA6IG9yZGVyLm9yZGVySWQsXHJcbiAgICAgIG9yZGVySW5mbyA6IHtcclxuICAgICAgICAuLi5vcmRlci5vcmRlckluZm8sXHJcbiAgICAgICAgb3JkZXJEYXRlOiBvcmRlci5vcmRlckluZm8ub3JkZXJEYXRlXHJcbiAgICAgIH0sXHJcbiAgICAgIG9yZGVyRGV0YWlsczogb3JkZXIub3JkZXJEZXRhaWxzLFxyXG4gICAgICBjdXN0b21lckluZm8gOiBvcmRlci5jdXN0b21lckluZm9cclxuICAgIH1cclxuXHJcbiAgICB1c2VyLm9yZGVyTGlzdC5wdXNoKG5ld09yZGVyKVxyXG5cclxuICAgIGF3YWl0IHVzZXIuc2F2ZSgpXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgIG1lc3NhZ2U6ICdPcmRlciBzdWNjZXNzZnVsbHkgcHJvY2Vzc2VkIGFuZCBzYXZlZCdcclxuICAgIH0pXHJcbiAgfWNhdGNoKGVycm9yKXtcclxuICAgIGNvbnNvbGUubG9nKGVycm9yKVxyXG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgbWVzc2FnZTogJ0ludGVybmFsIHNlcnZlciBlcnJvcidcclxuICAgIH0pXHJcbiAgfVxyXG59KVxyXG4vLyBlbmRwb2ludCBnZXQgYWxsIG9yZGVyTGlzdFxyXG5cclxuYXBwLmdldCgnL29yZGVyTGlzdCcsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgIFxyXG4gICAgY29uc3QgdXNlcnMgPSBhd2FpdCBVc2Vycy5maW5kKHt9LCAnb3JkZXJMaXN0Jyk7XHJcbiAgICBjb25zdCBhbGxPcmRlckxpc3QgPSB1c2Vycy5tYXAodXNlciA9PiB1c2VyLm9yZGVyTGlzdCk7XHJcblxyXG4gICAgY29uc3Qgb3JkZXJMaXN0ID0gYWxsT3JkZXJMaXN0LmZsYXQoKVxyXG5cclxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKG9yZGVyTGlzdCk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHdoaWxlIGZldGNoaW5nIGFsbCBjYXJ0RGV0YWlsczonLCBlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCAoZXJyb3IpID0+IHtcclxuICBpZighZXJyb3Ipe1xyXG4gICAgY29uc29sZS5sb2coXCJTZXJ2ZXIgUnVubmluZyBvbiBwb3J0OiBcIiArIHBvcnQpXHJcbiAgfWVsc2V7XHJcbiAgICBjb25zb2xlLmxvZyhcIkVycm9yOlwiICsgZXJyb3IpXHJcbiAgfVxyXG59KSJdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTUEsSUFBSSxHQUFHLElBQUk7QUFDakIsTUFBTUMsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxDQUFDLENBQUM7QUFDckIsTUFBTUcsUUFBUSxHQUFHRixPQUFPLENBQUMsVUFBVSxDQUFDO0FBQ3BDLE1BQU1HLEdBQUcsR0FBR0gsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNuQyxNQUFNSSxNQUFNLEdBQUdKLE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFDaEMsTUFBTUssSUFBSSxHQUFHTCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzVCLE1BQU1NLElBQUksR0FBR04sT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNO0VBQUVPLEVBQUUsRUFBRUM7QUFBSyxDQUFDLEdBQUdSLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDcENDLEdBQUcsQ0FBQ1EsR0FBRyxDQUFDVixPQUFPLENBQUNXLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDdkJULEdBQUcsQ0FBQ1EsR0FBRyxDQUFDSCxJQUFJLENBQUMsQ0FBQyxDQUFDOztBQUVmO0FBQ0FKLFFBQVEsQ0FBQ1MsT0FBTyxDQUFDLHdFQUF3RSxDQUFDOztBQUUxRjtBQUNBVixHQUFHLENBQUNXLEdBQUcsQ0FBQyxHQUFHLEVBQUUs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","map":{"version":3,"names":["port","express","require","app","mongoose","jwt","multer","path","cors","v4","uuid","use","json","connect","get","req","res","send","storage","diskStorage","destination","filename","file","cb","fieldname","Date","now","extname","originalname","upload","static","post","single","console","log","success","image_url","Product","model","id","type","Number","required","name","String","image","category","new_price","old_price","date","default","avilabel","Boolean","products","find","length","last_product_array","slice","last_product","product","body","save","findOneAndDelete","start","parseInt","query","limit","isNaN","skip","data","error","status","message","Users","email","password","orderList","Array","cartDetails","check","findOne","errors","cart","i","user","username","cartData","token","sign","passCompare","newcollection","slices","fetchUser","next","header","verify","userId","itemId","cartItem","userData","_id","existingItemIndex","findIndex","item","quantity","push","itemIndex","findOneAndUpdate","$inc","new","splice","order","customerInfo","newOrder","orderId","orderInfo","orderDate","orderDetails","users","allOrderList","map","flat","listen"],"sourceRoot":"C:\\Users\\quant\\Desktop\\ViteProject\\PROJECT\\backend\\","sources":["index.js"],"sourcesContent":["\r\nconst port = 4000;\r\nconst express = require('express')\r\nconst app = express()\r\nconst mongoose = require(\"mongoose\")\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst multer = require(\"multer\")\r\nconst path = require(\"path\")\r\nconst cors = require('cors');\r\nconst { v4: uuid } = require('uuid')\r\napp.use(express.json())\r\napp.use(cors())\r\n\r\n// Database connection with MongoDB\r\nmongoose.connect(\"mongodb+srv://tquandoo:Quan2401@cluster0.ok2xmoe.mongodb.net/Ecommerce\")\r\n\r\n// API creation\r\napp.get(\"/\", (req, res) => {\r\n    res.send(\"Express App is Running\")\r\n})\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: './upload/images',\r\n  filename: (req, file, cb) => {\r\n        return cb(null, `${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`)\r\n  }\r\n})\r\nconst upload = multer({storage: storage})\r\n\r\n//creating upload endpoint for images\r\n\r\napp.use('/images',express.static('upload/images'))\r\n\r\napp.post('/upload',upload.single('product'),(req, res) => {\r\n  console.log('req', req)\r\n      res.json({\r\n          success: 1,\r\n          image_url: `https://fashion-ecommerce-be.onrender.com/images/${req.file.filename}`\r\n      })\r\n})  \r\n\r\n// schema for creating product\r\nconst Product = mongoose.model(\"Product\", {\r\n  id: {\r\n    type: Number,\r\n    required: true,\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  image:{\r\n    type: String,\r\n    required: true,\r\n  },\r\n  category: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  new_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  old_price: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  date: {\r\n    type: Date,\r\n    default: Date.now\r\n  },\r\n  avilabel: {\r\n    type: Boolean,\r\n    default: true,\r\n  }\r\n})\r\n\r\napp.post('/addproduct', async (req, res) => {\r\n    let products = await Product.find({})\r\n    let id\r\n    if(products.length > 0) {\r\n        let last_product_array = products.slice(-1)\r\n        last_product = last_product_array[0]\r\n        id = last_product.id + 1;\r\n    }else{\r\n      id = 1\r\n    }\r\n        const product = new Product ({\r\n          id: id, // luôn bằng thằng cuối tăng lên 1\r\n          name: req.body.name,\r\n          image: req.body.image,\r\n          category: req.body.category,\r\n          new_price: req.body.new_price,\r\n          old_price: req.body.old_price,\r\n        })\r\n        await product.save()\r\n        console.log(\"Saved\")\r\n        res.json({\r\n          success: true,\r\n          name: req.body.name\r\n        })\r\n})\r\n\r\n// Creating API for deleting product\r\n\r\napp.post('/removeproduct', async (req, res) => {\r\n  await Product.findOneAndDelete({\r\n    id: req.body.id\r\n  })\r\n  console.log(\"Removed\")\r\n  res.json({\r\n    success: true,\r\n    name: req.body.name\r\n  })\r\n})\r\n\r\n// creating API for getting all products\r\napp.get('/allproduct', async (req, res) => {\r\n  try {\r\n    let start = parseInt(req.query.start) || 0; \r\n    let limit = parseInt(req.query.limit) || 12; \r\n    let category = req.query.category; \r\n    let query = {};\r\n    // Nếu category được chỉ định, thêm nó vào điều kiện truy vấn\r\n    if (category) {\r\n      query.category = category;\r\n    }\r\n\r\n    let products;\r\n\r\n    // Nếu cả start, limit và category đều được chỉ định, thực hiện lấy sản phẩm theo các điều kiện này\r\n    if (!isNaN(start) && !isNaN(limit) && category) {\r\n      products = await Product.find(query).skip(start).limit(limit);\r\n    } else {\r\n      // Nếu không có cả start, limit hoặc category, hoặc thiếu bất kỳ tham số nào, lấy tất cả sản phẩm\r\n      products = await Product.find({});\r\n    }\r\n\r\n    res.json({\r\n      success: true,\r\n      data: products\r\n    });\r\n  } catch (error) {\r\n    res.status(500).json({ success: false, message: \"Internal server error\" });\r\n  }\r\n});\r\n\r\nconst Users = mongoose.model('Users' , {\r\n  name: {\r\n      type: String,\r\n      required: true\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  orderList: {\r\n      type: Array,\r\n  },\r\n  cartDetails: {\r\n    type: Array,\r\n    default: [],\r\n  },\r\n  data: {\r\n    type: Date,\r\n    default: Date.now,\r\n  }\r\n});\r\napp.post('/signup', async (req, res) => {\r\n    let check =  await Users.findOne({email: req.body.email})\r\n    if(check) {\r\n      return res.status(400).json({\r\n        success: false,\r\n        errors: 'existing user found with same email'\r\n      }) \r\n    }\r\n    let cart = {};\r\n    for( let i = 0; i < 300 ; i++){\r\n      cart[i] = 0;\r\n    }\r\n    const user = new Users({\r\n        name: req.body.username,\r\n        email: req.body.email,\r\n        password: req.body.password,\r\n        orderList: [],\r\n        cartData: cart,\r\n    })\r\n    await user.save()\r\n    const data = {\r\n      user: {\r\n        id: user.id,\r\n        username: user.name,\r\n        email: user.email\r\n      }\r\n    }\r\n    const token = jwt.sign(data, 'secret_ecom')\r\n    res.json({ success: true, \r\n      token, \r\n      username: user.name, \r\n      email: user.email\r\n     }); // Sửa ở đây\r\n  }\r\n)\r\n\r\n//creating endpoint for user login \r\napp.post('/login', async (req, res) => {\r\n  let user = await Users.findOne({\r\n    email: req.body.email\r\n  });\r\n  \r\n  if (user) {\r\n    const passCompare = req.body.password === user.password;\r\n    if (passCompare) {\r\n      const data = {\r\n        user: {\r\n          id: user.id,\r\n          username: user.name,\r\n          email: user.email\r\n        }\r\n      };\r\n      const token = jwt.sign(data, 'secret_ecom');\r\n      res.json({ success: true, \r\n                    token, \r\n                    username: user.name, \r\n                    email: user.email }); // Sửa ở đây\r\n    } else {\r\n      res.json({ success: false, errors: 'Wrong Password' });\r\n    }\r\n  } else {\r\n    res.json({ success: false, errors: 'Wrong Email Id' });\r\n  }\r\n});\r\n\r\n// creating endpoint for newcollection data\r\napp.get('/newcollection', async (req, res) => {\r\n  let products = await Product.find({})\r\n  let newcollection = products.slices\r\n})\r\n\r\n// creating middleware to fetch user\r\n\r\nconst fetchUser = async (req,res, next) => {\r\n    const token = req.header('auth-token')\r\n    // console.log(token)\r\n    if (!token) {\r\n        res.status(401).send({\r\n          errors: 'Please authenticate using valid token'\r\n        })\r\n    }\r\n      else\r\n      {\r\n          try{\r\n            const data = jwt.verify(token, 'secret_ecom')\r\n            req.user = data.user\r\n            next()\r\n          }catch(error){\r\n            res.status(401).send({errors: \"Please authenticate using valid token\"})\r\n            console.log(error)\r\n          }\r\n        }\r\n}\r\n\r\n// creating endpoint for adding product in cartData\r\n// app.post('/addtocart', fetchUser , async (req, res) => {\r\n//   // console.log('Added', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData && userData.cartData){\r\n//     userData.cartData[req.body.itemId] += 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Added\")\r\n//   }else{\r\n//     console.log('chưa có userData')\r\n//   }\r\n// })\r\napp.post('/addtocart', fetchUser , async (req, res) => {\r\n  // console.log(req.body.cartItem)\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.cartItem.id; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n    // Kiểm tra xem người dùng đã có giỏ hàng hay chưa\r\n    if (!userData.cartDetails) {\r\n      userData.cartDetails = []; // Nếu chưa, khởi tạo giỏ hàng cho người dùng\r\n    }\r\n    // Tìm xem sản phẩm đã tồn tại trong giỏ hàng của người dùng chưa\r\n    const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (existingItemIndex !== -1) {\r\n      // Nếu sản phẩm đã tồn tại trong giỏ hàng, tăng số lượng lên 1\r\n      userData.cartDetails[existingItemIndex].quantity += 1;\r\n    } else {\r\n      // Nếu sản phẩm chưa tồn tại trong giỏ hàng, thêm sản phẩm vào giỏ hàng với số lượng là 1\r\n      userData.cartDetails.push({\r\n        ...req.body.cartItem,\r\n        quantity: 1\r\n      });\r\n    }\r\n    // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n    await userData.save();\r\n\r\n    res.status(200).send(\"Item added to cart successfully\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// app.post('/descrementfromcart', fetchUser , async (req, res) => {\r\n//   console.log('Removed', req.body.itemId)\r\n//   let userData = await Users.findOne({_id: req.user.id})\r\n//   if(userData.cartData[req.body.itemId] > 0) {\r\n//     userData.cartData[req.body.itemId] -= 1\r\n//     await Users.findOneAndUpdate({_id: req.user.id},{cartData: userData.cartData})\r\n//     res.send(\"Removed\")\r\n//   }\r\n// })\r\n\r\n// Endpoint để giảm số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/descrementfromcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({ _id: userId });\r\n\r\n    if (!userData) {\r\n      return res.status(404).send(\"User not found\");\r\n    }\r\n\r\n    // Tìm chỉ mục của sản phẩm trong giỏ hàng của người dùng\r\n    const itemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n    if (itemIndex !== -1 && userData.cartDetails[itemIndex] && userData.cartDetails[itemIndex].quantity > 0) {\r\n      console.log(\"quantity before decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      \r\n      // Nếu sản phẩm tồn tại trong giỏ hàng và có số lượng lớn hơn 0, giảm số lượng đi 1\r\n      userData.cartDetails[itemIndex].quantity -= 1;\r\n      \r\n      // Lưu cập nhật giỏ hàng vào cơ sở dữ liệu\r\n      await userData.save();\r\n      console.log(\"quantity after decrement:\", userData.cartDetails[itemIndex].quantity);\r\n      console.log('userData', userData)\r\n      \r\n      return res.status(200).send(\"Item quantity decremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"No items to decrement\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n// Endpoint để tăng số lượng của một sản phẩm trong giỏ hàng\r\napp.post('/incrementformcart', fetchUser, async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    const userData = await Users.findOneAndUpdate(\r\n      { _id: userId, \"cartDetails.id\": itemId }, // Tìm người dùng với ID và itemId phù hợp\r\n      { $inc: { \"cartDetails.$.quantity\": 1 } }, // Tăng quantity của mục có itemId tương ứng\r\n      { new: true } // Trả về tài liệu đã cập nhật\r\n    );\r\n\r\n    if (userData) {\r\n      return res.status(200).send(\"Item quantity incremented successfully\");\r\n    } else {\r\n      return res.status(400).send(\"Item not found in cart\");\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    return res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n// Endpoint để xóa một sản phẩm khỏi giỏ hàng\r\napp.post('/removefromcart', fetchUser , async (req, res) => {\r\n  try {\r\n    const userId = req.user.id;\r\n    const itemId = req.body.itemId; // Lấy id của sản phẩm từ request body\r\n    let userData = await Users.findOne({_id: userId});\r\n\r\n    // Kiểm tra xem người dùng có giỏ hàng hay không và giỏ hàng có sản phẩm đó không\r\n    if (userData && userData.cartDetails) {\r\n      const existingItemIndex = userData.cartDetails.findIndex(item => item.id === itemId);\r\n      if (existingItemIndex !== -1) {\r\n        userData.cartDetails.splice(existingItemIndex, 1); // Xóa sản phẩm khỏi giỏ hàng\r\n        await userData.save();\r\n        return res.status(200).send(\"Item removed from cart successfully\");\r\n      }\r\n    }\r\n    // Nếu không tìm thấy sản phẩm, trả về thông báo lỗi\r\n    res.status(400).send(\"Item not found in cart\");\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n\r\n\r\n// app.post('/removefromcart', fetchUser , async (req, res) => {\r\n//   try {\r\n//     const userId = req.user.id;\r\n//     const itemId = req.body.itemId;\r\n\r\n//     let userData = await Users.findOne({_id: userId});\r\n\r\n//     if(userData && userData.cartData && userData.cartData[itemId] > 0) {\r\n//       // Xóa hết số lượng sản phẩm trong giỏ hàng cho itemId\r\n//       userData.cartData[itemId] = 0;\r\n\r\n//       await Users.findOneAndUpdate({_id: userId}, {cartData: userData.cartData});\r\n//       res.status(200).send(\"All items removed\");\r\n//     } else {\r\n//       res.status(400).send(\"No items to remove\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     res.status(500).send(\"Internal server error\");\r\n//   }\r\n// });\r\n\r\n// creating endpoint to get cartdata\r\n// creating endpoint to get cartdata\r\n\r\n// app.post('/getcart', fetchUser, async (req, res) => {\r\n//   try {\r\n//       // Truy xuất dữ liệu người dùng từ middleware fetchUser\r\n//       const userId = req.user.id;\r\n//       // Tìm người dùng trong cơ sở dữ liệu\r\n//       const userData = await Users.findOne({ _id: userId });\r\n\r\n//       console.log('userData', userData)\r\n//       // Kiểm tra xem dữ liệu người dùng và giỏ hàng có tồn tại không\r\n//       if (userData && userData.cartData) {\r\n//           // Nếu tồn tại, trả về dữ liệu giỏ hàng dưới dạng JSON\r\n//           res.json(userData.cartData);\r\n//       } else {\r\n//           // Nếu không tìm thấy dữ liệu người dùng hoặc giỏ hàng, trả về thông báo lỗi\r\n//           res.status(404).json({ success: false, message: 'User or cart data not found' });\r\n//       }\r\n//   } catch (error) {\r\n//       // Xử lý lỗi nếu có bất kỳ lỗi nào xảy ra trong quá trình xử lý yêu cầu\r\n//       console.error(error);\r\n//       res.status(500).json({ success: false, message: 'Internal server error' });\r\n//   }\r\n// });\r\n\r\n\r\n// creating endpoint for checkout cart\r\napp.post('/orderList', async (req, res) => {\r\n  try{\r\n    const order = req.body\r\n    const user = await Users.findOne({\r\n        email:  order.customerInfo.email\r\n    })\r\n    if(!user){\r\n      return res.status(404).json({\r\n        success: false,\r\n        message: 'User not found'\r\n      })\r\n    }\r\n    const newOrder = { \r\n      orderId : order.orderId,\r\n      orderInfo : {\r\n        ...order.orderInfo,\r\n        orderDate: order.orderInfo.orderDate\r\n      },\r\n      orderDetails: order.orderDetails,\r\n      customerInfo : order.customerInfo\r\n    }\r\n\r\n    user.orderList.push(newOrder)\r\n\r\n    await user.save()\r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Order successfully processed and saved'\r\n    })\r\n  }catch(error){\r\n    console.log(error)\r\n    res.status(500).json({\r\n      success: false,\r\n      message: 'Internal server error'\r\n    })\r\n  }\r\n})\r\n// endpoint get all orderList\r\n\r\napp.get('/orderList', async (req, res) => {\r\n  try {\r\n   \r\n    const users = await Users.find({}, 'orderList');\r\n    const allOrderList = users.map(user => user.orderList);\r\n\r\n    const orderList = allOrderList.flat()\r\n\r\n    res.status(200).json(orderList);\r\n  } catch (error) {\r\n    console.error('Error while fetching all cartDetails:', error);\r\n    res.status(500).json({ error: 'Internal server error' });\r\n  }\r\n});\r\n\r\napp.listen(port, (error) => {\r\n  if(!error){\r\n    console.log(\"Server Running on port: \" + port)\r\n  }else{\r\n    console.log(\"Error:\" + error)\r\n  }\r\n})"],"mappings":"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"}},"mtime":1709651807555}}